{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ramos\\\\Downloads\\\\project\\\\src\\\\components\\\\GameRecommendation.js\",\n  _s = $RefreshSig$();\n// GameRecommendation.js\n\nimport React, { useState, useEffect } from 'react';\nimport { creativeGames, physicalGames, verbalGames } from './games';\nimport veoveoData from './veoveo_data.json'; // Asegúrate de que la ruta sea correcta\nimport pictionaryData from './pictionary_data.json'; // Asegúrate de que la ruta sea correcta\n\n// Suponemos que GameSelector y PlayerCounter pasan sus estados a este componente\n// O que puedes acceder a ellos a través de un contexto o manejo de estado global si los tienes.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameRecommendation({\n  selectedCategory,\n  numAdults,\n  numKids\n}) {\n  _s();\n  const [recommendedGame, setRecommendedGame] = useState(null);\n  const [globalDifficulty, setGlobalDifficulty] = useState([]); // Estado para almacenar las dificultades permitidas\n\n  // useEffect para recalcular la dificultad global cuando cambian numAdults o numKids\n  useEffect(() => {\n    // Si hay al menos un niño, la dificultad es fácil y media.\n    if (numKids > 0) {\n      setGlobalDifficulty(['facil', 'medio']);\n    }\n    // Si no hay niños (solo adultos), la dificultad es media y difícil.\n    else if (numAdults > 0) {\n      // Solo si hay adultos, si no, no hay jugadores.\n      setGlobalDifficulty(['medio', 'dificil']);\n    }\n    // Si no hay jugadores, no hay dificultades permitidas\n    else {\n      setGlobalDifficulty([]);\n    }\n  }, [numAdults, numKids]); // Dependencias del efecto\n\n  // Función para obtener un juego aleatorio basado en la categoría y la dificultad global\n  const getRandomGame = (gamesList, allowedDifficulties) => {\n    // Filtra los juegos de la lista por la dificultad permitida\n    const playableGames = gamesList.filter(game => game.difficulty ? allowedDifficulties.includes(game.difficulty) : true);\n    if (playableGames.length === 0) {\n      return null;\n    }\n    const randomIndex = Math.floor(Math.random() * playableGames.length);\n    return playableGames[randomIndex];\n  };\n  useEffect(() => {\n    let gamesToChooseFrom = [];\n    if (selectedCategory === 'creative') {\n      // Aquí, la recomendación de juegos creativos puede ser más compleja\n      // ya que 'Veo Veo' y 'Pictionary' tienen sus propios JSON de datos.\n      // Podrías seleccionar un juego como 'Veo Veo' y luego un elemento de ese juego\n      // filtrado por la dificultad global y la audiencia.\n\n      // Ejemplo simplificado: si eliges 'creative', podríamos recomendar una de las opciones\n      // de games.js o podríamos ir directamente a los datos de Veo Veo/Pictionary.\n      // Para este ejemplo, si la categoría es 'creative', seleccionamos una de las opciones del games.js\n      // que no tienen una dificultad predefinida, y luego la dificultad global se usaría\n      // para filtrar *dentro* de los datos de esos juegos específicos (veoveo_data, pictionary_data).\n\n      // Esto es una simplificación, la lógica de juego real sería más profunda.\n      gamesToChooseFrom = creativeGames;\n    } else if (selectedCategory === 'physical') {\n      gamesToChooseFrom = physicalGames;\n    } else if (selectedCategory === 'verbal') {\n      gamesToChooseFrom = verbalGames;\n    }\n\n    // Aquí es donde se utiliza la dificultad global para filtrar los elementos DENTRO de los juegos específicos\n    // como Veo Veo o Pictionary.\n    // games.js no tiene propiedad 'difficulty' en sus objetos de juego principales,\n    // solo en los JSON de datos específicos de cada juego.\n\n    // Si estás recomendando uno de los juegos generales de games.js:\n    if (gamesToChooseFrom.length > 0) {\n      const randomIndex = Math.floor(Math.random() * gamesToChooseFrom.length);\n      setRecommendedGame(gamesToChooseFrom[randomIndex]);\n    } else {\n      setRecommendedGame(null);\n    }\n\n    // --- Lógica para juegos específicos como Veo Veo y Pictionary ---\n    // Esta parte la manejarías en un componente de juego más específico\n    // o al seleccionar el juego \"Veo Veo\" o \"Pictionary\".\n\n    // Ejemplo para Veo Veo:\n    // Si el juego recomendado es \"Veo Veo\", entonces cargarías veoveoData y lo filtrarías:\n    if (recommendedGame && recommendedGame.name === \"Veo Veo\" && globalDifficulty.length > 0) {\n      const filteredVeoVeoData = veoveoData.filter(item => globalDifficulty.includes(item.Dificultad) && (numKids > 0 ? item.Audiencia === \"General\" || item.Audiencia === \"Niños\" : item.Audiencia === \"General\" || item.Audiencia === \"Adultos\"));\n      const randomVeoVeoItem = filteredVeoVeoData[Math.floor(Math.random() * filteredVeoVeoData.length)];\n      console.log(\"Objeto Veo Veo recomendado:\", randomVeoVeoItem);\n    }\n\n    // Ejemplo para Pictionary:\n    // Si el juego recomendado es \"Pictionary\", entonces cargarías pictionaryData y lo filtrarías:\n    if (recommendedGame && recommendedGame.name === \"Pictionary\" && globalDifficulty.length > 0) {\n      const filteredPictionaryData = pictionaryData.filter(item => globalDifficulty.includes(item.Dificultad) && (numKids > 0 ? item.Audiencia === \"General\" || item.Audiencia === \"Niños\" : item.Audiencia === \"General\" || item.Audiencia === \"Adultos\"));\n      const randomPictionaryItem = filteredPictionaryData[Math.floor(Math.random() * filteredPictionaryData.length)];\n      console.log(\"Elemento Pictionary recomendado:\", randomPictionaryItem);\n    }\n  }, [selectedCategory, globalDifficulty, numAdults, numKids, recommendedGame]); // Asegúrate de incluir las dependencias\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-recommendation-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recomendaci\\xF3n de Juego\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), recommendedGame ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Te recomendamos:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [recommendedGame.icon, \" \", recommendedGame.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Tiempo estimado: \", recommendedGame.time, \" minutos\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Dificultades permitidas: \", globalDifficulty.join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Selecciona una categor\\xEDa para obtener una recomendaci\\xF3n.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s(GameRecommendation, \"jfmfoiBGvl1JbwFETS4T+HPNDX8=\");\n_c = GameRecommendation;\nexport default GameRecommendation;\nvar _c;\n$RefreshReg$(_c, \"GameRecommendation\");","map":{"version":3,"names":["React","useState","useEffect","creativeGames","physicalGames","verbalGames","veoveoData","pictionaryData","jsxDEV","_jsxDEV","GameRecommendation","selectedCategory","numAdults","numKids","_s","recommendedGame","setRecommendedGame","globalDifficulty","setGlobalDifficulty","getRandomGame","gamesList","allowedDifficulties","playableGames","filter","game","difficulty","includes","length","randomIndex","Math","floor","random","gamesToChooseFrom","name","filteredVeoVeoData","item","Dificultad","Audiencia","randomVeoVeoItem","console","log","filteredPictionaryData","randomPictionaryItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","icon","time","join","_c","$RefreshReg$"],"sources":["C:/Users/ramos/Downloads/project/src/components/GameRecommendation.js"],"sourcesContent":["// GameRecommendation.js\n\nimport React, { useState, useEffect } from 'react';\nimport { creativeGames, physicalGames, verbalGames } from './games';\nimport veoveoData from './veoveo_data.json'; // Asegúrate de que la ruta sea correcta\nimport pictionaryData from './pictionary_data.json'; // Asegúrate de que la ruta sea correcta\n\n// Suponemos que GameSelector y PlayerCounter pasan sus estados a este componente\n// O que puedes acceder a ellos a través de un contexto o manejo de estado global si los tienes.\n\nfunction GameRecommendation({ selectedCategory, numAdults, numKids }) {\n  const [recommendedGame, setRecommendedGame] = useState(null);\n  const [globalDifficulty, setGlobalDifficulty] = useState([]); // Estado para almacenar las dificultades permitidas\n\n  // useEffect para recalcular la dificultad global cuando cambian numAdults o numKids\n  useEffect(() => {\n    // Si hay al menos un niño, la dificultad es fácil y media.\n    if (numKids > 0) {\n      setGlobalDifficulty(['facil', 'medio']);\n    } \n    // Si no hay niños (solo adultos), la dificultad es media y difícil.\n    else if (numAdults > 0) { // Solo si hay adultos, si no, no hay jugadores.\n      setGlobalDifficulty(['medio', 'dificil']);\n    } \n    // Si no hay jugadores, no hay dificultades permitidas\n    else {\n      setGlobalDifficulty([]);\n    }\n  }, [numAdults, numKids]); // Dependencias del efecto\n\n  // Función para obtener un juego aleatorio basado en la categoría y la dificultad global\n  const getRandomGame = (gamesList, allowedDifficulties) => {\n    // Filtra los juegos de la lista por la dificultad permitida\n    const playableGames = gamesList.filter(game => \n      game.difficulty ? allowedDifficulties.includes(game.difficulty) : true\n    );\n    \n    if (playableGames.length === 0) {\n      return null;\n    }\n    const randomIndex = Math.floor(Math.random() * playableGames.length);\n    return playableGames[randomIndex];\n  };\n\n  useEffect(() => {\n    let gamesToChooseFrom = [];\n    if (selectedCategory === 'creative') {\n      // Aquí, la recomendación de juegos creativos puede ser más compleja\n      // ya que 'Veo Veo' y 'Pictionary' tienen sus propios JSON de datos.\n      // Podrías seleccionar un juego como 'Veo Veo' y luego un elemento de ese juego\n      // filtrado por la dificultad global y la audiencia.\n      \n      // Ejemplo simplificado: si eliges 'creative', podríamos recomendar una de las opciones\n      // de games.js o podríamos ir directamente a los datos de Veo Veo/Pictionary.\n      // Para este ejemplo, si la categoría es 'creative', seleccionamos una de las opciones del games.js\n      // que no tienen una dificultad predefinida, y luego la dificultad global se usaría\n      // para filtrar *dentro* de los datos de esos juegos específicos (veoveo_data, pictionary_data).\n\n      // Esto es una simplificación, la lógica de juego real sería más profunda.\n      gamesToChooseFrom = creativeGames; \n    } else if (selectedCategory === 'physical') {\n      gamesToChooseFrom = physicalGames;\n    } else if (selectedCategory === 'verbal') {\n      gamesToChooseFrom = verbalGames;\n    }\n\n    // Aquí es donde se utiliza la dificultad global para filtrar los elementos DENTRO de los juegos específicos\n    // como Veo Veo o Pictionary.\n    // games.js no tiene propiedad 'difficulty' en sus objetos de juego principales,\n    // solo en los JSON de datos específicos de cada juego.\n\n    // Si estás recomendando uno de los juegos generales de games.js:\n    if (gamesToChooseFrom.length > 0) {\n      const randomIndex = Math.floor(Math.random() * gamesToChooseFrom.length);\n      setRecommendedGame(gamesToChooseFrom[randomIndex]);\n    } else {\n      setRecommendedGame(null);\n    }\n\n    // --- Lógica para juegos específicos como Veo Veo y Pictionary ---\n    // Esta parte la manejarías en un componente de juego más específico\n    // o al seleccionar el juego \"Veo Veo\" o \"Pictionary\".\n\n    // Ejemplo para Veo Veo:\n    // Si el juego recomendado es \"Veo Veo\", entonces cargarías veoveoData y lo filtrarías:\n    if (recommendedGame && recommendedGame.name === \"Veo Veo\" && globalDifficulty.length > 0) {\n      const filteredVeoVeoData = veoveoData.filter(item => \n        globalDifficulty.includes(item.Dificultad) && \n        (numKids > 0 ? item.Audiencia === \"General\" || item.Audiencia === \"Niños\" : item.Audiencia === \"General\" || item.Audiencia === \"Adultos\")\n      );\n      const randomVeoVeoItem = filteredVeoVeoData[Math.floor(Math.random() * filteredVeoVeoData.length)];\n      console.log(\"Objeto Veo Veo recomendado:\", randomVeoVeoItem);\n    }\n\n    // Ejemplo para Pictionary:\n    // Si el juego recomendado es \"Pictionary\", entonces cargarías pictionaryData y lo filtrarías:\n    if (recommendedGame && recommendedGame.name === \"Pictionary\" && globalDifficulty.length > 0) {\n      const filteredPictionaryData = pictionaryData.filter(item => \n        globalDifficulty.includes(item.Dificultad) && \n        (numKids > 0 ? item.Audiencia === \"General\" || item.Audiencia === \"Niños\" : item.Audiencia === \"General\" || item.Audiencia === \"Adultos\")\n      );\n      const randomPictionaryItem = filteredPictionaryData[Math.floor(Math.random() * filteredPictionaryData.length)];\n      console.log(\"Elemento Pictionary recomendado:\", randomPictionaryItem);\n    }\n\n\n  }, [selectedCategory, globalDifficulty, numAdults, numKids, recommendedGame]); // Asegúrate de incluir las dependencias\n\n  return (\n    <div className=\"game-recommendation-container\">\n      <h2>Recomendación de Juego</h2>\n      {recommendedGame ? (\n        <div>\n          <p>Te recomendamos:</p>\n          <h3>{recommendedGame.icon} {recommendedGame.name}</h3>\n          <p>Tiempo estimado: {recommendedGame.time} minutos</p>\n          <p>Dificultades permitidas: {globalDifficulty.join(', ')}</p>\n          {/* Aquí podrías mostrar más detalles del juego o incluso un botón para \"Empezar\" */}\n        </div>\n      ) : (\n        <p>Selecciona una categoría para obtener una recomendación.</p>\n      )}\n    </div>\n  );\n}\n\nexport default GameRecommendation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}