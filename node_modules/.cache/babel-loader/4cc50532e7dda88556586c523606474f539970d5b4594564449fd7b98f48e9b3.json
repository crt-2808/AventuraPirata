{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ramos\\\\Downloads\\\\project\\\\src\\\\components\\\\VeoVeoGame.js\",\n  _s = $RefreshSig$();\n// src/components/VeoVeoGame.js\n\nimport React, { useState, useEffect, useRef } from 'react';\n// Puedes instalar y usar react-confetti: npm install react-confetti\n// import Confetti from 'react-confetti';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction VeoVeoGame({\n  players,\n  allowedDifficulties,\n  onExitGame\n}) {\n  _s();\n  var _gameData$currentObje3, _gameData$currentObje4;\n  // Aquí almacenaríamos las pistas filtradas del juego Veo Veo\n  const [gameData, setGameData] = useState([]);\n  const [currentObjectIndex, setCurrentObjectIndex] = useState(0); // Índice del objeto actual (para 5 objetos)\n  const [currentPistaIndex, setCurrentPistaIndex] = useState(0); // Índice de la pista actual del objeto\n  const [timeLeft, setTimeLeft] = useState(25); // Tiempo restante para el temporizador principal\n  const [isGameActive, setIsGameActive] = useState(false); // Si el juego está en curso\n  const [showConfetti, setShowConfetti] = useState(false); // Para la animación de confeti\n  const [nextObjectTimer, setNextObjectTimer] = useState(0); // Temporizador para el siguiente objeto (5 segundos)\n\n  const timerRef = useRef(null); // Para controlar el temporizador principal\n  const nextObjectTimerRef = useRef(null); // Para controlar el temporizador del siguiente objeto\n\n  // Función para cargar y filtrar las pistas según la dificultad\n  useEffect(() => {\n    // Importamos los datos de veo_veo aquí para asegurarnos de que solo filtramos una vez\n    const veoveoData = require('../mock/veoveo_data.json'); // Usamos require para importar json directamente\n    console.log(\"Datos de Veo Veo cargados:\", veoveoData);\n    // Filtramos los objetos de Veo Veo por la dificultad permitida\n    const filteredData = veoveoData.filter(item => item.dificultad && allowedDifficulties.some(diff => item.dificultad.includes(diff)));\n\n    // Si queremos un juego de 5 objetos, podemos seleccionar 5 al azar aquí\n    const selectedObjects = [];\n    if (filteredData.length > 0) {\n      const shuffledData = [...filteredData].sort(() => 0.5 - Math.random()); // Mezclar\n      for (let i = 0; i < 5 && i < shuffledData.length; i++) {\n        // Seleccionar los primeros 5\n        selectedObjects.push(shuffledData[i]);\n      }\n    }\n    setGameData(selectedObjects);\n    console.log(\"Datos de Veo Veo filtrados por dificultad:\", selectedObjects);\n    // Reiniciar el juego si los datos cambian (solo si se vuelve a montar el componente)\n    if (selectedObjects.length > 0) {\n      setCurrentObjectIndex(0);\n      setCurrentPistaIndex(0);\n      setTimeLeft(25);\n      setIsGameActive(true);\n      startMainTimer(); // Iniciar el temporizador al cargar el componente\n    } else {\n      setIsGameActive(false);\n      console.log(\"No hay objetos de Veo Veo para la dificultad seleccionada.\");\n    }\n\n    // Limpieza al desmontar el componente o al cambiar la dependencia\n    return () => {\n      clearInterval(timerRef.current);\n      clearInterval(nextObjectTimerRef.current);\n    };\n  }, [allowedDifficulties]); // Se ejecuta cuando las dificultades permitidas cambian\n\n  // useEffect para manejar el temporizador principal (25 segundos por objeto)\n  useEffect(() => {\n    if (isGameActive && timeLeft > 0 && nextObjectTimer === 0) {\n      timerRef.current = setInterval(() => {\n        setTimeLeft(prevTime => prevTime - 1);\n      }, 1000);\n    } else if (timeLeft === 0 && isGameActive) {\n      var _gameData$currentObje;\n      clearInterval(timerRef.current);\n      // Se acabó el tiempo para este objeto\n      console.log(\"¡Se acabó el tiempo para:\", (_gameData$currentObje = gameData[currentObjectIndex]) === null || _gameData$currentObje === void 0 ? void 0 : _gameData$currentObje.respuesta);\n      // Podrías mostrar un mensaje o la respuesta aquí\n      startNextObjectTimer(true); // Inicia el temporizador de 5 segundos, indicando que fue por tiempo agotado\n      setIsGameActive(false); // Pausa el juego principal\n    }\n    return () => clearInterval(timerRef.current);\n  }, [timeLeft, isGameActive, nextObjectTimer]);\n\n  // Función para iniciar el temporizador principal (25 segundos)\n  const startMainTimer = () => {\n    clearInterval(timerRef.current); // Asegura que no haya múltiples temporizadores\n    setTimeLeft(25);\n    setIsGameActive(true);\n  };\n\n  // Función para iniciar el temporizador de 5 segundos para el siguiente objeto\n  const startNextObjectTimer = (timeUp = false) => {\n    setShowConfetti(false); // Ocultar confeti\n    setNextObjectTimer(5);\n    clearInterval(nextObjectTimerRef.current); // Limpia cualquier temporizador previo\n\n    nextObjectTimerRef.current = setInterval(() => {\n      setNextObjectTimer(prevTime => {\n        if (prevTime <= 1) {\n          clearInterval(nextObjectTimerRef.current);\n          handleNextObject(); // Avanza al siguiente objeto\n          return 0;\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n  };\n\n  // Función para avanzar al siguiente objeto\n  const handleNextObject = () => {\n    // Comprobar si quedan más objetos (hasta 5)\n    if (currentObjectIndex < 4 && gameData.length > currentObjectIndex + 1) {\n      setCurrentObjectIndex(prevIndex => prevIndex + 1);\n      setCurrentPistaIndex(0); // Reiniciar pistas para el nuevo objeto\n      startMainTimer(); // Iniciar temporizador para el nuevo objeto\n    } else {\n      // Si no quedan más objetos, el juego termina\n      console.log(\"¡Juego de Veo Veo Terminado!\");\n      setIsGameActive(false);\n      if (onExitGame) {\n        onExitGame(); // Vuelve al GameSelector\n      }\n    }\n  };\n\n  // Función para el botón \"Adiviné\"\n  const handleAdivine = () => {\n    var _gameData$currentObje2;\n    clearInterval(timerRef.current); // Detener el temporizador principal\n    setIsGameActive(false); // Pausar el juego principal\n    setShowConfetti(true); // Mostrar confeti\n\n    console.log(\"¡Adivinó el objeto:\", (_gameData$currentObje2 = gameData[currentObjectIndex]) === null || _gameData$currentObje2 === void 0 ? void 0 : _gameData$currentObje2.respuesta);\n    // Inicia el temporizador de 5 segundos para el siguiente objeto\n    startNextObjectTimer();\n  };\n\n  // Función para el botón \"Otra Pista\"\n  const handleOtraPista = () => {\n    const currentObject = gameData[currentObjectIndex];\n    if (currentObject && currentPistaIndex < currentObject.pistas.length - 1) {\n      setCurrentPistaIndex(prevIndex => prevIndex + 1);\n    } else {\n      console.log(\"No hay más pistas para este objeto.\");\n      // Podrías decidir qué hacer aquí si no hay más pistas:\n      // - Mostrar la respuesta directamente.\n      // - Forzar el fin del tiempo.\n      // Por ahora, no hace nada si no hay más pistas.\n    }\n  };\n\n  // Muestra \"Cargando...\" o similar si no hay datos filtrados o el juego no ha comenzado\n  if (!isGameActive && gameData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md mx-auto mt-8 bg-white p-6 rounded-lg shadow-md text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4 text-gray-800\",\n        children: \"Cargando juego Veo Veo...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"Aseg\\xFArate de que hay datos de Veo Veo para las dificultades seleccionadas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onExitGame,\n        className: \"mt-4 bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded\",\n        children: \"Salir del Juego\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Si no hay objeto actual (por ejemplo, juego terminado o error)\n  if (!gameData[currentObjectIndex]) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md mx-auto mt-8 bg-white p-6 rounded-lg shadow-md text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4 text-gray-800\",\n        children: \"Juego Veo Veo Terminado / Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"Gracias por jugar. \\xA1Vuelve pronto!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onExitGame,\n        className: \"mt-4 bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded\",\n        children: \"Volver al Selector de Juego\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Renderizado principal del juego\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container bg-white p-6 rounded-lg shadow-md text-center relative\",\n    children: [showConfetti &&\n    /*#__PURE__*/\n    // Necesitarás instalar react-confetti para esto\n    // <Confetti\n    //   width={window.innerWidth}\n    //   height={window.innerHeight}\n    //   recycle={false} // Para que se dispare una sola vez\n    //   numberOfPieces={200}\n    //   gravity={0.1}\n    // />\n    _jsxDEV(\"div\", {\n      className: \"confetti-placeholder text-4xl mb-4\",\n      children: \"\\uD83C\\uDF89 Confeti! \\uD83C\\uDF89\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this) // Placeholder visual\n    , /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onExitGame,\n      className: \"absolute top-4 left-4 bg-gray-200 hover:bg-gray-300 p-2 rounded-full text-xl\",\n      children: \"\\u2190 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4 text-gray-800\",\n      children: \"\\xA1Veo Veo!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg text-gray-700 mb-2\",\n      children: [\"Objeto \", currentObjectIndex + 1, \" de \", gameData.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-xl font-bold mb-4\",\n      children: [\"Tiempo restante: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-red-500\",\n        children: [timeLeft, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 64\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-4xl font-extrabold text-blue-600 my-8\",\n      children: nextObjectTimer > 0 && !showConfetti ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-600\",\n        children: [\"Siguiente objeto en \", nextObjectTimer, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this) : timeLeft === 0 && !showConfetti ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-600\",\n        children: [\"\\xA1Se acab\\xF3 el tiempo! Era: \\\"\", (_gameData$currentObje3 = gameData[currentObjectIndex]) === null || _gameData$currentObje3 === void 0 ? void 0 : _gameData$currentObje3.respuesta, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-blue-600\",\n        children: [\"\\\"\", (_gameData$currentObje4 = gameData[currentObjectIndex]) === null || _gameData$currentObje4 === void 0 ? void 0 : _gameData$currentObje4.pistas[currentPistaIndex], \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center space-x-4 mt-8\",\n      children: nextObjectTimer === 0 && timeLeft > 0 &&\n      /*#__PURE__*/\n      // Solo muestra botones si el juego está activo y no es tiempo de espera\n      _jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAdivine,\n          className: \"bg-purple-600 hover:bg-purple-700 text-white font-bold py-3 px-6 rounded-lg text-lg transition duration-300\",\n          children: \"\\xA1Adivin\\xE9!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleOtraPista,\n          className: \"bg-yellow-600 hover:bg-yellow-700 text-white font-bold py-3 px-6 rounded-lg text-lg transition duration-300\",\n          children: \"Otra Pista\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n}\n_s(VeoVeoGame, \"H7hInhNmHYK7eG7MDmUmk33NX4M=\");\n_c = VeoVeoGame;\nexport default VeoVeoGame;\nvar _c;\n$RefreshReg$(_c, \"VeoVeoGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","VeoVeoGame","players","allowedDifficulties","onExitGame","_s","_gameData$currentObje3","_gameData$currentObje4","gameData","setGameData","currentObjectIndex","setCurrentObjectIndex","currentPistaIndex","setCurrentPistaIndex","timeLeft","setTimeLeft","isGameActive","setIsGameActive","showConfetti","setShowConfetti","nextObjectTimer","setNextObjectTimer","timerRef","nextObjectTimerRef","veoveoData","require","console","log","filteredData","filter","item","dificultad","some","diff","includes","selectedObjects","length","shuffledData","sort","Math","random","i","push","startMainTimer","clearInterval","current","setInterval","prevTime","_gameData$currentObje","respuesta","startNextObjectTimer","timeUp","handleNextObject","prevIndex","handleAdivine","_gameData$currentObje2","handleOtraPista","currentObject","pistas","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ramos/Downloads/project/src/components/VeoVeoGame.js"],"sourcesContent":["// src/components/VeoVeoGame.js\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\n// Puedes instalar y usar react-confetti: npm install react-confetti\r\n// import Confetti from 'react-confetti';\r\n\r\nfunction VeoVeoGame({ players, allowedDifficulties, onExitGame }) {\r\n  // Aquí almacenaríamos las pistas filtradas del juego Veo Veo\r\n  const [gameData, setGameData] = useState([]);\r\n  const [currentObjectIndex, setCurrentObjectIndex] = useState(0); // Índice del objeto actual (para 5 objetos)\r\n  const [currentPistaIndex, setCurrentPistaIndex] = useState(0); // Índice de la pista actual del objeto\r\n  const [timeLeft, setTimeLeft] = useState(25); // Tiempo restante para el temporizador principal\r\n  const [isGameActive, setIsGameActive] = useState(false); // Si el juego está en curso\r\n  const [showConfetti, setShowConfetti] = useState(false); // Para la animación de confeti\r\n  const [nextObjectTimer, setNextObjectTimer] = useState(0); // Temporizador para el siguiente objeto (5 segundos)\r\n\r\n  const timerRef = useRef(null); // Para controlar el temporizador principal\r\n  const nextObjectTimerRef = useRef(null); // Para controlar el temporizador del siguiente objeto\r\n\r\n  // Función para cargar y filtrar las pistas según la dificultad\r\n  useEffect(() => {\r\n    // Importamos los datos de veo_veo aquí para asegurarnos de que solo filtramos una vez\r\n    const veoveoData = require('../mock/veoveo_data.json'); // Usamos require para importar json directamente\r\n    console.log(\"Datos de Veo Veo cargados:\", veoveoData);\r\n    // Filtramos los objetos de Veo Veo por la dificultad permitida\r\n    const filteredData = veoveoData.filter(item =>\r\n      item.dificultad && allowedDifficulties.some(diff => item.dificultad.includes(diff))\r\n    );\r\n\r\n    // Si queremos un juego de 5 objetos, podemos seleccionar 5 al azar aquí\r\n    const selectedObjects = [];\r\n    if (filteredData.length > 0) {\r\n      const shuffledData = [...filteredData].sort(() => 0.5 - Math.random()); // Mezclar\r\n      for (let i = 0; i < 5 && i < shuffledData.length; i++) { // Seleccionar los primeros 5\r\n        selectedObjects.push(shuffledData[i]);\r\n      }\r\n    }\r\n    setGameData(selectedObjects);\r\n\r\n    console.log(\"Datos de Veo Veo filtrados por dificultad:\", selectedObjects);\r\n    // Reiniciar el juego si los datos cambian (solo si se vuelve a montar el componente)\r\n    if (selectedObjects.length > 0) {\r\n      setCurrentObjectIndex(0);\r\n      setCurrentPistaIndex(0);\r\n      setTimeLeft(25);\r\n      setIsGameActive(true);\r\n      startMainTimer(); // Iniciar el temporizador al cargar el componente\r\n    } else {\r\n      setIsGameActive(false);\r\n      console.log(\"No hay objetos de Veo Veo para la dificultad seleccionada.\");\r\n    }\r\n\r\n    // Limpieza al desmontar el componente o al cambiar la dependencia\r\n    return () => {\r\n      clearInterval(timerRef.current);\r\n      clearInterval(nextObjectTimerRef.current);\r\n    };\r\n  }, [allowedDifficulties]); // Se ejecuta cuando las dificultades permitidas cambian\r\n\r\n  // useEffect para manejar el temporizador principal (25 segundos por objeto)\r\n  useEffect(() => {\r\n    if (isGameActive && timeLeft > 0 && nextObjectTimer === 0) {\r\n      timerRef.current = setInterval(() => {\r\n        setTimeLeft(prevTime => prevTime - 1);\r\n      }, 1000);\r\n    } else if (timeLeft === 0 && isGameActive) {\r\n      clearInterval(timerRef.current);\r\n      // Se acabó el tiempo para este objeto\r\n      console.log(\"¡Se acabó el tiempo para:\", gameData[currentObjectIndex]?.respuesta);\r\n      // Podrías mostrar un mensaje o la respuesta aquí\r\n      startNextObjectTimer(true); // Inicia el temporizador de 5 segundos, indicando que fue por tiempo agotado\r\n      setIsGameActive(false); // Pausa el juego principal\r\n    }\r\n\r\n    return () => clearInterval(timerRef.current);\r\n  }, [timeLeft, isGameActive, nextObjectTimer]);\r\n\r\n\r\n  // Función para iniciar el temporizador principal (25 segundos)\r\n  const startMainTimer = () => {\r\n    clearInterval(timerRef.current); // Asegura que no haya múltiples temporizadores\r\n    setTimeLeft(25);\r\n    setIsGameActive(true);\r\n  };\r\n\r\n\r\n  // Función para iniciar el temporizador de 5 segundos para el siguiente objeto\r\n  const startNextObjectTimer = (timeUp = false) => {\r\n    setShowConfetti(false); // Ocultar confeti\r\n    setNextObjectTimer(5);\r\n    clearInterval(nextObjectTimerRef.current); // Limpia cualquier temporizador previo\r\n\r\n    nextObjectTimerRef.current = setInterval(() => {\r\n      setNextObjectTimer(prevTime => {\r\n        if (prevTime <= 1) {\r\n          clearInterval(nextObjectTimerRef.current);\r\n          handleNextObject(); // Avanza al siguiente objeto\r\n          return 0;\r\n        }\r\n        return prevTime - 1;\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n\r\n  // Función para avanzar al siguiente objeto\r\n  const handleNextObject = () => {\r\n    // Comprobar si quedan más objetos (hasta 5)\r\n    if (currentObjectIndex < 4 && gameData.length > (currentObjectIndex + 1)) {\r\n      setCurrentObjectIndex(prevIndex => prevIndex + 1);\r\n      setCurrentPistaIndex(0); // Reiniciar pistas para el nuevo objeto\r\n      startMainTimer(); // Iniciar temporizador para el nuevo objeto\r\n    } else {\r\n      // Si no quedan más objetos, el juego termina\r\n      console.log(\"¡Juego de Veo Veo Terminado!\");\r\n      setIsGameActive(false);\r\n      if (onExitGame) {\r\n        onExitGame(); // Vuelve al GameSelector\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  // Función para el botón \"Adiviné\"\r\n  const handleAdivine = () => {\r\n    clearInterval(timerRef.current); // Detener el temporizador principal\r\n    setIsGameActive(false); // Pausar el juego principal\r\n    setShowConfetti(true); // Mostrar confeti\r\n\r\n    console.log(\"¡Adivinó el objeto:\", gameData[currentObjectIndex]?.respuesta);\r\n    // Inicia el temporizador de 5 segundos para el siguiente objeto\r\n    startNextObjectTimer();\r\n  };\r\n\r\n  // Función para el botón \"Otra Pista\"\r\n  const handleOtraPista = () => {\r\n    const currentObject = gameData[currentObjectIndex];\r\n    if (currentObject && currentPistaIndex < currentObject.pistas.length - 1) {\r\n      setCurrentPistaIndex(prevIndex => prevIndex + 1);\r\n    } else {\r\n      console.log(\"No hay más pistas para este objeto.\");\r\n      // Podrías decidir qué hacer aquí si no hay más pistas:\r\n      // - Mostrar la respuesta directamente.\r\n      // - Forzar el fin del tiempo.\r\n      // Por ahora, no hace nada si no hay más pistas.\r\n    }\r\n  };\r\n\r\n\r\n  // Muestra \"Cargando...\" o similar si no hay datos filtrados o el juego no ha comenzado\r\n  if (!isGameActive && gameData.length === 0) {\r\n    return (\r\n      <div className=\"max-w-md mx-auto mt-8 bg-white p-6 rounded-lg shadow-md text-center\">\r\n        <h2 className=\"text-2xl font-bold mb-4 text-gray-800\">Cargando juego Veo Veo...</h2>\r\n        <p className=\"text-gray-600\">Asegúrate de que hay datos de Veo Veo para las dificultades seleccionadas.</p>\r\n        <button onClick={onExitGame} className=\"mt-4 bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded\">\r\n          Salir del Juego\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Si no hay objeto actual (por ejemplo, juego terminado o error)\r\n  if (!gameData[currentObjectIndex]) {\r\n    return (\r\n      <div className=\"max-w-md mx-auto mt-8 bg-white p-6 rounded-lg shadow-md text-center\">\r\n        <h2 className=\"text-2xl font-bold mb-4 text-gray-800\">Juego Veo Veo Terminado / Error</h2>\r\n        <p className=\"text-gray-600\">Gracias por jugar. ¡Vuelve pronto!</p>\r\n        <button onClick={onExitGame} className=\"mt-4 bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded\">\r\n          Volver al Selector de Juego\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Renderizado principal del juego\r\n  return (\r\n    <div className=\"game-container bg-white p-6 rounded-lg shadow-md text-center relative\">\r\n      {showConfetti && (\r\n        // Necesitarás instalar react-confetti para esto\r\n        // <Confetti\r\n        //   width={window.innerWidth}\r\n        //   height={window.innerHeight}\r\n        //   recycle={false} // Para que se dispare una sola vez\r\n        //   numberOfPieces={200}\r\n        //   gravity={0.1}\r\n        // />\r\n        <div className=\"confetti-placeholder text-4xl mb-4\">🎉 Confeti! 🎉</div> // Placeholder visual\r\n      )}\r\n\r\n      {/* Botón de Salir del Juego */}\r\n      <button\r\n        onClick={onExitGame}\r\n        className=\"absolute top-4 left-4 bg-gray-200 hover:bg-gray-300 p-2 rounded-full text-xl\"\r\n      >\r\n        &#8592; {/* Flecha de atrás */}\r\n      </button>\r\n\r\n      <h2 className=\"text-2xl font-bold mb-4 text-gray-800\">¡Veo Veo!</h2>\r\n\r\n      {/* Contador de objeto actual / total de objetos */}\r\n      <p className=\"text-lg text-gray-700 mb-2\">Objeto {currentObjectIndex + 1} de {gameData.length}</p>\r\n\r\n      {/* Temporizador principal */}\r\n      <div className=\"text-xl font-bold mb-4\">Tiempo restante: <span className=\"text-red-500\">{timeLeft}s</span></div>\r\n\r\n      {/* Pista actual */}\r\n      <div className=\"text-4xl font-extrabold text-blue-600 my-8\">\r\n        {nextObjectTimer > 0 && !showConfetti ? (\r\n          <p className=\"text-green-600\">Siguiente objeto en {nextObjectTimer}s</p>\r\n        ) : timeLeft === 0 && !showConfetti ? (\r\n          <p className=\"text-red-600\">¡Se acabó el tiempo! Era: \"{gameData[currentObjectIndex]?.respuesta}\"</p>\r\n        ) : (\r\n          <p className=\"text-blue-600\">\"{gameData[currentObjectIndex]?.pistas[currentPistaIndex]}\"</p>\r\n        )}\r\n      </div>\r\n\r\n\r\n      {/* Botones de acción */}\r\n      <div className=\"flex justify-center space-x-4 mt-8\">\r\n        {nextObjectTimer === 0 && timeLeft > 0 && ( // Solo muestra botones si el juego está activo y no es tiempo de espera\r\n          <>\r\n            <button\r\n              onClick={handleAdivine}\r\n              className=\"bg-purple-600 hover:bg-purple-700 text-white font-bold py-3 px-6 rounded-lg text-lg transition duration-300\"\r\n            >\r\n              ¡Adiviné!\r\n            </button>\r\n            <button\r\n              onClick={handleOtraPista}\r\n              className=\"bg-yellow-600 hover:bg-yellow-700 text-white font-bold py-3 px-6 rounded-lg text-lg transition duration-300\"\r\n            >\r\n              Otra Pista\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VeoVeoGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}