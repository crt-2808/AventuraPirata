{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ramos\\\\Downloads\\\\project\\\\src\\\\components\\\\GameRecommendation.js\",\n  _s = $RefreshSig$();\n// src/components/GameRecommendation.js\n\nimport React, { useState, useEffect } from 'react';\n// Importa los datos de los juegos (asegúrate de que las rutas sean correctas)\nimport gamesData from '../mock/games.js';\nimport pictionaryData from '../mock/pictionary_data.json';\nimport veoveoData from '../mock/veoveo_data.json';\n\n// Las props que recibe ahora: gameType, players, allowedDifficulties, onBack\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameRecommendation({\n  gameType,\n  players,\n  allowedDifficulties,\n  onBack\n}) {\n  _s();\n  const [recommendedGame, setRecommendedGame] = useState(null);\n  const [gameDetails, setGameDetails] = useState(null); // Para almacenar los datos específicos del juego (ej. de Veo Veo)\n\n  // useEffect para mostrar las dificultades permitidas en consola (para depuración)\n  useEffect(() => {\n    console.log(\"Dificultades permitidas recibidas en GameRecommendation:\", allowedDifficulties);\n    console.log(\"Tipo de juego seleccionado:\", gameType);\n    console.log(\"Jugadores:\", players);\n  }, [allowedDifficulties, gameType, players]); // Se ejecuta cuando estas props cambian\n\n  // useEffect principal para la selección del juego\n  useEffect(() => {\n    if (!gameType) return; // Asegúrate de que haya un tipo de juego seleccionado\n\n    let gamesOfType = [];\n    if (gameType === 'Juego Verbal') {\n      gamesOfType = gamesData.verbalGames;\n    } else if (gameType === 'Juego Creativo') {\n      gamesOfType = gamesData.creativeGames;\n    } else if (gameType === 'Juego Físico') {\n      gamesOfType = gamesData.physicalGames;\n    }\n    if (gamesOfType.length > 0) {\n      // Seleccionar un juego al azar de los disponibles en la categoría\n      const randomIndex = Math.floor(Math.random() * gamesOfType.length);\n      const selectedRandomGame = gamesOfType[randomIndex];\n      setRecommendedGame(selectedRandomGame.name);\n\n      // Cargar detalles específicos del juego si es necesario (ej. Veo Veo o Pictionary)\n      if (selectedRandomGame.name === 'Veo Veo') {\n        // En el siguiente paso, aquí filtraremos veoveoData por allowedDifficulties\n        setGameDetails(veoveoData);\n      } else if (selectedRandomGame.name === 'Pictionary') {\n        // En el siguiente paso, aquí filtraremos pictionaryData por allowedDifficulties\n        setGameDetails(pictionaryData);\n      } else {\n        setGameDetails(null); // No hay datos específicos para otros juegos\n      }\n    } else {\n      setRecommendedGame(\"No hay juegos disponibles para esta categoría.\");\n      setGameDetails(null);\n    }\n  }, [gameType]); // Dependencia: re-seleccionar juego si el tipo de juego cambia\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-recommendation-container bg-white p-6 rounded-lg shadow-md text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onBack,\n      className: \"absolute top-4 left-4 bg-gray-200 hover:bg-gray-300 p-2 rounded-full text-xl\",\n      children: \"\\u2190 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4 text-gray-800\",\n      children: \"\\xA1Excelente elecci\\xF3n!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), recommendedGame && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-xl text-gray-700\",\n      children: [\"Tu juego recomendado es: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: recommendedGame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 71\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), gameDetails && recommendedGame === 'Veo Veo' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold text-gray-700\",\n        children: \"Detalles para Veo Veo:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"Juego Veo Veo seleccionado. \\xA1Preparando pistas!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), gameDetails && recommendedGame === 'Pictionary' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold text-gray-700\",\n        children: \"Detalles para Pictionary:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"Juego Pictionary seleccionado. \\xA1Preparando palabras!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(GameRecommendation, \"cpA4+mCazRiFuLhGydBF6S/b8WI=\");\n_c = GameRecommendation;\nexport default GameRecommendation;\nvar _c;\n$RefreshReg$(_c, \"GameRecommendation\");","map":{"version":3,"names":["React","useState","useEffect","gamesData","pictionaryData","veoveoData","jsxDEV","_jsxDEV","GameRecommendation","gameType","players","allowedDifficulties","onBack","_s","recommendedGame","setRecommendedGame","gameDetails","setGameDetails","console","log","gamesOfType","verbalGames","creativeGames","physicalGames","length","randomIndex","Math","floor","random","selectedRandomGame","name","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ramos/Downloads/project/src/components/GameRecommendation.js"],"sourcesContent":["// src/components/GameRecommendation.js\n\nimport React, { useState, useEffect } from 'react';\n// Importa los datos de los juegos (asegúrate de que las rutas sean correctas)\nimport gamesData from '../mock/games.js';\nimport pictionaryData from '../mock/pictionary_data.json';\nimport veoveoData from '../mock/veoveo_data.json';\n\n// Las props que recibe ahora: gameType, players, allowedDifficulties, onBack\nfunction GameRecommendation({ gameType, players, allowedDifficulties, onBack }) {\n  const [recommendedGame, setRecommendedGame] = useState(null);\n  const [gameDetails, setGameDetails] = useState(null); // Para almacenar los datos específicos del juego (ej. de Veo Veo)\n\n  // useEffect para mostrar las dificultades permitidas en consola (para depuración)\n  useEffect(() => {\n    console.log(\"Dificultades permitidas recibidas en GameRecommendation:\", allowedDifficulties);\n    console.log(\"Tipo de juego seleccionado:\", gameType);\n    console.log(\"Jugadores:\", players);\n  }, [allowedDifficulties, gameType, players]); // Se ejecuta cuando estas props cambian\n\n  // useEffect principal para la selección del juego\n  useEffect(() => {\n    if (!gameType) return; // Asegúrate de que haya un tipo de juego seleccionado\n\n    let gamesOfType = [];\n    if (gameType === 'Juego Verbal') {\n      gamesOfType = gamesData.verbalGames;\n    } else if (gameType === 'Juego Creativo') {\n      gamesOfType = gamesData.creativeGames;\n    } else if (gameType === 'Juego Físico') {\n      gamesOfType = gamesData.physicalGames;\n    }\n\n    if (gamesOfType.length > 0) {\n      // Seleccionar un juego al azar de los disponibles en la categoría\n      const randomIndex = Math.floor(Math.random() * gamesOfType.length);\n      const selectedRandomGame = gamesOfType[randomIndex];\n      setRecommendedGame(selectedRandomGame.name);\n\n      // Cargar detalles específicos del juego si es necesario (ej. Veo Veo o Pictionary)\n      if (selectedRandomGame.name === 'Veo Veo') {\n        // En el siguiente paso, aquí filtraremos veoveoData por allowedDifficulties\n        setGameDetails(veoveoData);\n      } else if (selectedRandomGame.name === 'Pictionary') {\n        // En el siguiente paso, aquí filtraremos pictionaryData por allowedDifficulties\n        setGameDetails(pictionaryData);\n      } else {\n        setGameDetails(null); // No hay datos específicos para otros juegos\n      }\n    } else {\n      setRecommendedGame(\"No hay juegos disponibles para esta categoría.\");\n      setGameDetails(null);\n    }\n  }, [gameType]); // Dependencia: re-seleccionar juego si el tipo de juego cambia\n\n  return (\n    <div className=\"game-recommendation-container bg-white p-6 rounded-lg shadow-md text-center\">\n      {/* Botón de \"atrás\" para volver al selector de juego */}\n      <button\n        onClick={onBack}\n        className=\"absolute top-4 left-4 bg-gray-200 hover:bg-gray-300 p-2 rounded-full text-xl\"\n      >\n        &#8592; {/* Carácter de flecha izquierda */}\n      </button>\n\n      <h2 className=\"text-2xl font-bold mb-4 text-gray-800\">¡Excelente elección!</h2>\n      {recommendedGame && (\n        <p className=\"text-xl text-gray-700\">Tu juego recomendado es: <strong>{recommendedGame}</strong></p>\n      )}\n\n      {/* Aquí es donde eventualmente mostraremos los detalles específicos del juego filtrados */}\n      {gameDetails && recommendedGame === 'Veo Veo' && (\n        <div className=\"mt-4\">\n          <h3 className=\"text-xl font-semibold text-gray-700\">Detalles para Veo Veo:</h3>\n          {/* Por ahora, solo un mensaje. Aquí irá la lógica de mostrar la pista. */}\n          <p className=\"text-gray-600\">Juego Veo Veo seleccionado. ¡Preparando pistas!</p>\n        </div>\n      )}\n\n      {gameDetails && recommendedGame === 'Pictionary' && (\n        <div className=\"mt-4\">\n          <h3 className=\"text-xl font-semibold text-gray-700\">Detalles para Pictionary:</h3>\n          {/* Por ahora, solo un mensaje. Aquí irá la lógica de mostrar la palabra. */}\n          <p className=\"text-gray-600\">Juego Pictionary seleccionado. ¡Preparando palabras!</p>\n        </div>\n      )}\n\n      {/* Puedes añadir un botón para generar otra recomendación si lo deseas */}\n      {/* <button onClick={() => setRecommendedGame(null)} className=\"mt-4 bg-blue-500 text-white px-4 py-2 rounded\">\n        Recomendar otro juego\n      </button> */}\n    </div>\n  );\n}\n\nexport default GameRecommendation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}