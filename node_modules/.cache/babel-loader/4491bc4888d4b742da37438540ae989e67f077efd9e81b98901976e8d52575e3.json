{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ramos\\\\Downloads\\\\project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport GameSelector from './components/GameSelector';\nimport GameRecommendation from './components/GameRecommendation';\nimport PlayerCounter from './components/PlayerCounter';\nimport PirateHeader from './components/PirateHeader';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [adultPlayers, setAdultPlayers] = useState(0);\n  const [childPlayers, setChildPlayers] = useState(0);\n  const [selectedGameType, setSelectedGameType] = useState(null);\n  // Nuevo estado para las dificultades permitidas\n  const [allowedDifficulties, setAllowedDifficulties] = useState([]);\n\n  // useEffect para recalcular las dificultades permitidas cuando cambian los jugadores\n  useEffect(() => {\n    determineAllowedDifficulties();\n  }, [adultPlayers, childPlayers]); // Dependencias: se ejecuta cuando estos estados cambian\n\n  // Función para determinar las dificultades permitidas\n  const determineAllowedDifficulties = () => {\n    let difficulties = [];\n    if (childPlayers > 0) {\n      // Si hay al menos un niño, la dificultad es fácil y media\n      difficulties = ['facil', 'medio'];\n    } else if (adultPlayers > 0) {\n      // Si solo hay adultos (y al menos uno), la dificultad es media y difícil\n      difficulties = ['medio', 'dificil'];\n    } else {\n      // Si no hay jugadores (o ambos son cero), por defecto, podrías querer un estado inicial o manejarlo\n      // Aquí, por simplicidad, lo dejaremos vacío o podrías poner ['facil'] si quieres un default.\n      // Para este caso, lo ideal sería que el GameRecommendation.js también maneje este array vacío.\n      difficulties = [];\n    }\n    setAllowedDifficulties(difficulties);\n    console.log(\"Dificultades permitidas:\", difficulties); // Para depuración, puedes ver esto en la consola\n  };\n  const handlePlayersChange = (adults, children) => {\n    setAdultPlayers(adults);\n    setChildPlayers(children);\n  };\n  const handleSelectGameType = gameType => {\n    setSelectedGameType(gameType);\n  };\n  const handleBackToSelection = () => {\n    setSelectedGameType(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(PirateHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"main-title\",\n      children: \"\\xA1Elige tu Aventura de Juego!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), selectedGameType ? /*#__PURE__*/_jsxDEV(GameRecommendation, {\n      gameType: selectedGameType,\n      players: {\n        adultPlayers,\n        childPlayers\n      },\n      allowedDifficulties: allowedDifficulties // Pasamos las dificultades permitidas\n      ,\n      onBack: handleBackToSelection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(PlayerCounter, {\n        onPlayersChange: handlePlayersChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GameSelector, {\n        onSelectGameType: handleSelectGameType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"08kq/Jfd+XhK4rvaJY/WGTGFXBg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","GameSelector","GameRecommendation","PlayerCounter","PirateHeader","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","adultPlayers","setAdultPlayers","childPlayers","setChildPlayers","selectedGameType","setSelectedGameType","allowedDifficulties","setAllowedDifficulties","determineAllowedDifficulties","difficulties","console","log","handlePlayersChange","adults","children","handleSelectGameType","gameType","handleBackToSelection","className","fileName","_jsxFileName","lineNumber","columnNumber","players","onBack","onPlayersChange","onSelectGameType","_c","$RefreshReg$"],"sources":["C:/Users/ramos/Downloads/project/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport GameSelector from './components/GameSelector';\nimport GameRecommendation from './components/GameRecommendation';\nimport PlayerCounter from './components/PlayerCounter';\nimport PirateHeader from './components/PirateHeader';\nimport './styles.css';\n\nfunction App() {\n  const [adultPlayers, setAdultPlayers] = useState(0);\n  const [childPlayers, setChildPlayers] = useState(0);\n  const [selectedGameType, setSelectedGameType] = useState(null);\n  // Nuevo estado para las dificultades permitidas\n  const [allowedDifficulties, setAllowedDifficulties] = useState([]);\n\n  // useEffect para recalcular las dificultades permitidas cuando cambian los jugadores\n  useEffect(() => {\n    determineAllowedDifficulties();\n  }, [adultPlayers, childPlayers]); // Dependencias: se ejecuta cuando estos estados cambian\n\n  // Función para determinar las dificultades permitidas\n  const determineAllowedDifficulties = () => {\n    let difficulties = [];\n    if (childPlayers > 0) {\n      // Si hay al menos un niño, la dificultad es fácil y media\n      difficulties = ['facil', 'medio'];\n    } else if (adultPlayers > 0) {\n      // Si solo hay adultos (y al menos uno), la dificultad es media y difícil\n      difficulties = ['medio', 'dificil'];\n    } else {\n      // Si no hay jugadores (o ambos son cero), por defecto, podrías querer un estado inicial o manejarlo\n      // Aquí, por simplicidad, lo dejaremos vacío o podrías poner ['facil'] si quieres un default.\n      // Para este caso, lo ideal sería que el GameRecommendation.js también maneje este array vacío.\n      difficulties = []; \n    }\n    setAllowedDifficulties(difficulties);\n    console.log(\"Dificultades permitidas:\", difficulties); // Para depuración, puedes ver esto en la consola\n  };\n\n  const handlePlayersChange = (adults, children) => {\n    setAdultPlayers(adults);\n    setChildPlayers(children);\n  };\n\n  const handleSelectGameType = (gameType) => {\n    setSelectedGameType(gameType);\n  };\n\n  const handleBackToSelection = () => {\n    setSelectedGameType(null);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <PirateHeader />\n      <h1 className=\"main-title\">¡Elige tu Aventura de Juego!</h1>\n\n      {selectedGameType ? (\n        <GameRecommendation\n          gameType={selectedGameType}\n          players={{ adultPlayers, childPlayers }}\n          allowedDifficulties={allowedDifficulties} // Pasamos las dificultades permitidas\n          onBack={handleBackToSelection}\n        />\n      ) : (\n        <>\n          <PlayerCounter onPlayersChange={handlePlayersChange} />\n          <GameSelector onSelectGameType={handleSelectGameType} />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}