{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ramos\\\\Downloads\\\\project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport GameSelector from './components/GameSelector';\nimport GameRecommendation from './components/GameRecommendation';\nimport PlayerCounter from './components/PlayerCounter';\nimport PirateHeader from './components/PirateHeader';\nimport './styles.css'; // Asegúrate de que tu CSS se importa aquí\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [adultPlayers, setAdultPlayers] = useState(0);\n  const [childPlayers, setChildPlayers] = useState(0);\n  const [selectedGameType, setSelectedGameType] = useState(null);\n  // Nuevo estado para las dificultades permitidas\n  const [allowedDifficulties, setAllowedDifficulties] = useState([]);\n\n  // useEffect para recalcular las dificultades permitidas cuando cambian los jugadores\n  useEffect(() => {\n    let difficulties = [];\n    if (childPlayers > 0) {\n      // Si hay al menos un niño, la dificultad es fácil y media\n      difficulties = ['facil', 'medio'];\n    } else if (adultPlayers > 0) {\n      // Si solo hay adultos (y al menos uno), la dificultad es media y difícil\n      difficulties = ['medio', 'dificil'];\n    } else {\n      // Si no hay jugadores (o ambos son cero), por defecto, lo dejamos vacío\n      difficulties = [];\n    }\n    setAllowedDifficulties(difficulties);\n    // Mostrar en consola la dificultad permitida\n    console.log(\"Dificultades permitidas en App.js:\", difficulties);\n  }, [adultPlayers, childPlayers]); // Dependencias: se ejecuta cuando estos estados cambian\n\n  const handlePlayersChange = (adults, children) => {\n    setAdultPlayers(adults);\n    setChildPlayers(children);\n  };\n  const handleSelectGameType = gameType => {\n    setSelectedGameType(gameType);\n  };\n  const handleBackToSelection = () => {\n    setSelectedGameType(null);\n  };\n  return (\n    /*#__PURE__*/\n    // ASUMIMOS QUE TU ESTRUCTURA JSX ORIGINAL ERA ALGO COMO ESTO\n    // Y NO SE MODIFICA NADA DE LO QUE YA TIENES EN TU RETURN ORIGINAL\n    _jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(PirateHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"main-title\",\n        children: \"\\xA1Elige tu Aventura de Juego!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), \" \", selectedGameType ? /*#__PURE__*/_jsxDEV(GameRecommendation, {\n        gameType: selectedGameType,\n        players: {\n          adultPlayers,\n          childPlayers\n        },\n        allowedDifficulties: allowedDifficulties // PASANDO LA NUEVA PROP\n        ,\n        onBack: handleBackToSelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(PlayerCounter, {\n          onPlayersChange: handlePlayersChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GameSelector, {\n          onSelectGameType: handleSelectGameType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"08kq/Jfd+XhK4rvaJY/WGTGFXBg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","GameSelector","GameRecommendation","PlayerCounter","PirateHeader","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","adultPlayers","setAdultPlayers","childPlayers","setChildPlayers","selectedGameType","setSelectedGameType","allowedDifficulties","setAllowedDifficulties","difficulties","console","log","handlePlayersChange","adults","children","handleSelectGameType","gameType","handleBackToSelection","className","fileName","_jsxFileName","lineNumber","columnNumber","players","onBack","onPlayersChange","onSelectGameType","_c","$RefreshReg$"],"sources":["C:/Users/ramos/Downloads/project/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport GameSelector from './components/GameSelector';\nimport GameRecommendation from './components/GameRecommendation';\nimport PlayerCounter from './components/PlayerCounter';\nimport PirateHeader from './components/PirateHeader';\nimport './styles.css'; // Asegúrate de que tu CSS se importa aquí\n\nfunction App() {\n  const [adultPlayers, setAdultPlayers] = useState(0);\n  const [childPlayers, setChildPlayers] = useState(0);\n  const [selectedGameType, setSelectedGameType] = useState(null);\n  // Nuevo estado para las dificultades permitidas\n  const [allowedDifficulties, setAllowedDifficulties] = useState([]);\n\n  // useEffect para recalcular las dificultades permitidas cuando cambian los jugadores\n  useEffect(() => {\n    let difficulties = [];\n    if (childPlayers > 0) {\n      // Si hay al menos un niño, la dificultad es fácil y media\n      difficulties = ['facil', 'medio'];\n    } else if (adultPlayers > 0) {\n      // Si solo hay adultos (y al menos uno), la dificultad es media y difícil\n      difficulties = ['medio', 'dificil'];\n    } else {\n      // Si no hay jugadores (o ambos son cero), por defecto, lo dejamos vacío\n      difficulties = [];\n    }\n    setAllowedDifficulties(difficulties);\n    // Mostrar en consola la dificultad permitida\n    console.log(\"Dificultades permitidas en App.js:\", difficulties);\n  }, [adultPlayers, childPlayers]); // Dependencias: se ejecuta cuando estos estados cambian\n\n  const handlePlayersChange = (adults, children) => {\n    setAdultPlayers(adults);\n    setChildPlayers(children);\n  };\n\n  const handleSelectGameType = (gameType) => {\n    setSelectedGameType(gameType);\n  };\n\n  const handleBackToSelection = () => {\n    setSelectedGameType(null);\n  };\n\n  return (\n    // ASUMIMOS QUE TU ESTRUCTURA JSX ORIGINAL ERA ALGO COMO ESTO\n    // Y NO SE MODIFICA NADA DE LO QUE YA TIENES EN TU RETURN ORIGINAL\n    <div className=\"app-container\">\n      <PirateHeader />\n      <h1 className=\"main-title\">¡Elige tu Aventura de Juego!</h1> {/* Este título ya estaba? */}\n\n      {selectedGameType ? (\n        <GameRecommendation\n          gameType={selectedGameType}\n          players={{ adultPlayers, childPlayers }}\n          allowedDifficulties={allowedDifficulties} // PASANDO LA NUEVA PROP\n          onBack={handleBackToSelection}\n        />\n      ) : (\n        <>\n          <PlayerCounter onPlayersChange={handlePlayersChange} />\n          <GameSelector onSelectGameType={handleSelectGameType} />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}