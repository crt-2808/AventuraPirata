{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ramos\\\\Downloads\\\\project\\\\src\\\\components\\\\TetrisGame.js\",\n  _s = $RefreshSig$();\n// src/components/TetrisGame.js\n\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\n\n// Función para obtener la URL de la imagen de forma dinámica con require()\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getImageUrl = imagePath => {\n  try {\n    // Si la ruta en el JSON es \"../src/img/NOMBRE.png\"\n    // y este componente está en src/components/,\n    // la ruta relativa desde components a src/img/ es simplemente '../img/'.\n    // Entonces, extraemos el nombre del archivo y construimos la ruta.\n\n    const parts = imagePath.split('/'); // Divide la cadena por '/'\n    const fileName = parts[parts.length - 1]; // Toma el último elemento (el nombre del archivo)\n\n    // require() necesita que la parte estática de la ruta sea evidente para Webpack.\n    // Usamos el contexto de '../img/' y luego el nombre del archivo.\n    return require(`../img/${fileName}`);\n  } catch (e) {\n    console.error(`Error al cargar la imagen: ${imagePath}. Asegúrate de que el archivo existe en src/img/ y que el nombre es correcto.`, e);\n    // Puedes devolver una imagen de placeholder si lo deseas para evitar un error visual\n    return null;\n  }\n};\nfunction TetrisGame({\n  players,\n  onExitGame\n}) {\n  _s();\n  const [tetrisPieces, setTetrisPieces] = useState([]);\n  const [currentPiece, setCurrentPiece] = useState(null);\n  const [turnTimeLeft, setTurnTimeLeft] = useState(10);\n  const [showChangePlayerMessage, setShowChangePlayerMessage] = useState(false);\n  const [changePlayerTimer, setChangePlayerTimer] = useState(0);\n  const [isGameActive, setIsGameActive] = useState(false);\n  const [turnCounter, setTurnCounter] = useState(0);\n  const turnTimerRef = useRef(null);\n  const changePlayerTimerRef = useRef(null);\n  const getRandomPiece = useCallback((excludeFirstITetromino = false) => {\n    if (tetrisPieces.length === 0) return null;\n    let availablePieces = [...tetrisPieces];\n    if (excludeFirstITetromino) {\n      availablePieces = availablePieces.filter(piece => piece.nombre !== \"Tetris_Oco_I\");\n      if (availablePieces.length === 0) {\n        console.warn(\"No hay piezas disponibles después de excluir 'Tetris_Oco_I'.\");\n        return null;\n      }\n    }\n    const randomIndex = Math.floor(Math.random() * availablePieces.length);\n    return availablePieces[randomIndex];\n  }, [tetrisPieces]);\n  const startTurnTimer = useCallback(() => {\n    clearInterval(turnTimerRef.current);\n    setTurnTimeLeft(10);\n    setIsGameActive(true);\n  }, []);\n  const handleNextTurnLogic = useCallback(() => {\n    clearInterval(turnTimerRef.current);\n    const nextPiece = getRandomPiece(false);\n    if (nextPiece) {\n      setCurrentPiece(nextPiece);\n      startTurnTimer();\n      setIsGameActive(true);\n    } else {\n      console.log(\"No hay más piezas para jugar. Juego terminado.\");\n      setIsGameActive(false);\n      if (onExitGame) {\n        onExitGame();\n      }\n    }\n  }, [getRandomPiece, onExitGame, startTurnTimer]);\n  useEffect(() => {\n    import('../mock/tetris_data.json').then(module => {\n      const data = module.default;\n      setTetrisPieces(data);\n      if (data.length === 0) {\n        console.error(\"tetris_data.json está vacío o no contiene piezas.\");\n        setIsGameActive(false);\n        return;\n      }\n      const firstPiece = getRandomPiece(true);\n      if (firstPiece) {\n        setCurrentPiece(firstPiece);\n        startTurnTimer();\n        setTurnCounter(1);\n      } else {\n        console.error(\"No se pudo seleccionar la primera pieza de Tetris.\");\n        setIsGameActive(false);\n      }\n    }).catch(error => {\n      console.error(\"Error al cargar los datos de Tetris:\", error);\n      setIsGameActive(false);\n    });\n    return () => {\n      clearInterval(turnTimerRef.current);\n      clearInterval(changePlayerTimerRef.current);\n    };\n  }, [getRandomPiece, startTurnTimer]);\n  useEffect(() => {\n    if (isGameActive && turnTimeLeft > 0 && !showChangePlayerMessage) {\n      turnTimerRef.current = setInterval(() => {\n        setTurnTimeLeft(prevTime => prevTime - 1);\n      }, 1000);\n    } else if (turnTimeLeft === 0 && isGameActive) {\n      clearInterval(turnTimerRef.current);\n      console.log(\"¡Tiempo agotado para el turno!\");\n      setIsGameActive(false);\n      setShowChangePlayerMessage(true);\n      setChangePlayerTimer(7);\n      setTurnCounter(prev => prev + 1);\n    }\n    return () => clearInterval(turnTimerRef.current);\n  }, [turnTimeLeft, isGameActive, showChangePlayerMessage]);\n  useEffect(() => {\n    if (showChangePlayerMessage && changePlayerTimer > 0) {\n      changePlayerTimerRef.current = setInterval(() => {\n        setChangePlayerTimer(prevTime => prevTime - 1);\n      }, 1000);\n    } else if (changePlayerTimer === 0 && showChangePlayerMessage) {\n      clearInterval(changePlayerTimerRef.current);\n      setShowChangePlayerMessage(false);\n      handleNextTurnLogic();\n    }\n    return () => clearInterval(changePlayerTimerRef.current);\n  }, [showChangePlayerMessage, changePlayerTimer, handleNextTurnLogic]);\n  const handleVale = () => {\n    clearInterval(turnTimerRef.current);\n    setIsGameActive(false);\n    setShowChangePlayerMessage(true);\n    setChangePlayerTimer(7);\n    setTurnCounter(prev => prev + 1);\n  };\n  const handleTerminar = () => {\n    clearInterval(turnTimerRef.current);\n    clearInterval(changePlayerTimerRef.current);\n    setIsGameActive(false);\n    if (onExitGame) {\n      onExitGame();\n    }\n  };\n  const progressPercentage = turnTimeLeft / 10 * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container bg-white p-6 rounded-lg shadow-md text-center relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onExitGame,\n      className: \"absolute top-4 left-4 bg-gray-200 hover:bg-gray-300 p-2 rounded-full text-xl\",\n      children: \"\\u2190\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4 text-gray-800\",\n      children: \"\\xA1Tetris!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg text-gray-700 mb-4\",\n      children: [\"Turno #\", turnCounter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full bg-gray-200 rounded-full h-4 dark:bg-gray-700 mb-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-purple-500 h-4 rounded-full transition-all duration-1000 ease-linear\",\n        style: {\n          width: `${progressPercentage}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-xl font-bold mb-8 text-purple-700\",\n      children: [\"Tiempo restante: \", turnTimeLeft, \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), showChangePlayerMessage ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-600 text-5xl font-bold mb-4\",\n        children: \"\\xA1Cambia de Jugador!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-700 text-3xl\",\n        children: [\"Siguiente pieza en \", changePlayerTimer, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this) : currentPiece ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-3xl font-extrabold text-blue-700 my-4\",\n        children: [\"\\\"\", currentPiece.nombre, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-8 flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: getImageUrl(currentPiece.url_imagen) // Usamos la función getImageUrl\n          ,\n          alt: currentPiece.nombre,\n          className: \"max-h-64 object-contain shadow-lg rounded-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center space-x-4 mt-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleVale,\n          className: \"bg-green-600 hover:bg-green-700 text-white font-bold py-3 px-6 rounded-lg text-lg transition duration-300\",\n          children: \"\\xA1Vale!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleTerminar,\n          className: \"bg-red-500 hover:bg-red-600 text-white font-bold py-3 px-6 rounded-lg text-lg transition duration-300\",\n          children: \"Terminar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-gray-600 text-xl my-8\",\n      children: \"Cargando pieza de Tetris...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n}\n_s(TetrisGame, \"HR2lLWNASlFTPByVjALiWJf1SPg=\");\n_c = TetrisGame;\nexport default TetrisGame;\nvar _c;\n$RefreshReg$(_c, \"TetrisGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","jsxDEV","_jsxDEV","Fragment","_Fragment","getImageUrl","imagePath","parts","split","fileName","length","require","e","console","error","TetrisGame","players","onExitGame","_s","tetrisPieces","setTetrisPieces","currentPiece","setCurrentPiece","turnTimeLeft","setTurnTimeLeft","showChangePlayerMessage","setShowChangePlayerMessage","changePlayerTimer","setChangePlayerTimer","isGameActive","setIsGameActive","turnCounter","setTurnCounter","turnTimerRef","changePlayerTimerRef","getRandomPiece","excludeFirstITetromino","availablePieces","filter","piece","nombre","warn","randomIndex","Math","floor","random","startTurnTimer","clearInterval","current","handleNextTurnLogic","nextPiece","log","then","module","data","default","firstPiece","catch","setInterval","prevTime","prev","handleVale","handleTerminar","progressPercentage","className","children","onClick","_jsxFileName","lineNumber","columnNumber","style","width","src","url_imagen","alt","_c","$RefreshReg$"],"sources":["C:/Users/ramos/Downloads/project/src/components/TetrisGame.js"],"sourcesContent":["// src/components/TetrisGame.js\r\n\r\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\r\n\r\n// Función para obtener la URL de la imagen de forma dinámica con require()\r\nconst getImageUrl = (imagePath) => {\r\n  try {\r\n    // Si la ruta en el JSON es \"../src/img/NOMBRE.png\"\r\n    // y este componente está en src/components/,\r\n    // la ruta relativa desde components a src/img/ es simplemente '../img/'.\r\n    // Entonces, extraemos el nombre del archivo y construimos la ruta.\r\n\r\n    const parts = imagePath.split('/'); // Divide la cadena por '/'\r\n    const fileName = parts[parts.length - 1]; // Toma el último elemento (el nombre del archivo)\r\n\r\n    // require() necesita que la parte estática de la ruta sea evidente para Webpack.\r\n    // Usamos el contexto de '../img/' y luego el nombre del archivo.\r\n    return require(`../img/${fileName}`);\r\n  } catch (e) {\r\n    console.error(`Error al cargar la imagen: ${imagePath}. Asegúrate de que el archivo existe en src/img/ y que el nombre es correcto.`, e);\r\n    // Puedes devolver una imagen de placeholder si lo deseas para evitar un error visual\r\n    return null; \r\n  }\r\n};\r\n\r\n\r\nfunction TetrisGame({ players, onExitGame }) {\r\n  const [tetrisPieces, setTetrisPieces] = useState([]);\r\n  const [currentPiece, setCurrentPiece] = useState(null);\r\n  const [turnTimeLeft, setTurnTimeLeft] = useState(10);\r\n  const [showChangePlayerMessage, setShowChangePlayerMessage] = useState(false);\r\n  const [changePlayerTimer, setChangePlayerTimer] = useState(0);\r\n  const [isGameActive, setIsGameActive] = useState(false);\r\n  const [turnCounter, setTurnCounter] = useState(0);\r\n\r\n  const turnTimerRef = useRef(null);\r\n  const changePlayerTimerRef = useRef(null);\r\n\r\n  const getRandomPiece = useCallback((excludeFirstITetromino = false) => {\r\n    if (tetrisPieces.length === 0) return null;\r\n\r\n    let availablePieces = [...tetrisPieces];\r\n\r\n    if (excludeFirstITetromino) {\r\n      availablePieces = availablePieces.filter(piece => piece.nombre !== \"Tetris_Oco_I\");\r\n      if (availablePieces.length === 0) {\r\n        console.warn(\"No hay piezas disponibles después de excluir 'Tetris_Oco_I'.\");\r\n        return null; \r\n      }\r\n    }\r\n    \r\n    const randomIndex = Math.floor(Math.random() * availablePieces.length);\r\n    return availablePieces[randomIndex];\r\n  }, [tetrisPieces]);\r\n\r\n\r\n  const startTurnTimer = useCallback(() => {\r\n    clearInterval(turnTimerRef.current);\r\n    setTurnTimeLeft(10);\r\n    setIsGameActive(true);\r\n  }, []);\r\n\r\n  const handleNextTurnLogic = useCallback(() => {\r\n    clearInterval(turnTimerRef.current);\r\n    \r\n    const nextPiece = getRandomPiece(false);\r\n    if (nextPiece) {\r\n      setCurrentPiece(nextPiece);\r\n      startTurnTimer();\r\n      setIsGameActive(true);\r\n    } else {\r\n      console.log(\"No hay más piezas para jugar. Juego terminado.\");\r\n      setIsGameActive(false);\r\n      if (onExitGame) {\r\n        onExitGame();\r\n      }\r\n    }\r\n  }, [getRandomPiece, onExitGame, startTurnTimer]);\r\n\r\n\r\n  useEffect(() => {\r\n    import('../mock/tetris_data.json')\r\n      .then(module => {\r\n        const data = module.default;\r\n        setTetrisPieces(data);\r\n\r\n        if (data.length === 0) {\r\n          console.error(\"tetris_data.json está vacío o no contiene piezas.\");\r\n          setIsGameActive(false);\r\n          return;\r\n        }\r\n\r\n        const firstPiece = getRandomPiece(true);\r\n        if (firstPiece) {\r\n          setCurrentPiece(firstPiece);\r\n          startTurnTimer();\r\n          setTurnCounter(1);\r\n        } else {\r\n            console.error(\"No se pudo seleccionar la primera pieza de Tetris.\");\r\n            setIsGameActive(false);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error al cargar los datos de Tetris:\", error);\r\n        setIsGameActive(false);\r\n      });\r\n\r\n    return () => {\r\n      clearInterval(turnTimerRef.current);\r\n      clearInterval(changePlayerTimerRef.current);\r\n    };\r\n  }, [getRandomPiece, startTurnTimer]);\r\n\r\n  useEffect(() => {\r\n    if (isGameActive && turnTimeLeft > 0 && !showChangePlayerMessage) {\r\n      turnTimerRef.current = setInterval(() => {\r\n        setTurnTimeLeft(prevTime => prevTime - 1);\r\n      }, 1000);\r\n    } else if (turnTimeLeft === 0 && isGameActive) {\r\n      clearInterval(turnTimerRef.current);\r\n      console.log(\"¡Tiempo agotado para el turno!\");\r\n      setIsGameActive(false);\r\n      setShowChangePlayerMessage(true);\r\n      setChangePlayerTimer(7);\r\n      setTurnCounter(prev => prev + 1);\r\n    }\r\n    return () => clearInterval(turnTimerRef.current);\r\n  }, [turnTimeLeft, isGameActive, showChangePlayerMessage]);\r\n\r\n  useEffect(() => {\r\n    if (showChangePlayerMessage && changePlayerTimer > 0) {\r\n      changePlayerTimerRef.current = setInterval(() => {\r\n        setChangePlayerTimer(prevTime => prevTime - 1);\r\n      }, 1000);\r\n    } else if (changePlayerTimer === 0 && showChangePlayerMessage) {\r\n      clearInterval(changePlayerTimerRef.current);\r\n      setShowChangePlayerMessage(false);\r\n      handleNextTurnLogic();\r\n    }\r\n    return () => clearInterval(changePlayerTimerRef.current);\r\n  }, [showChangePlayerMessage, changePlayerTimer, handleNextTurnLogic]);\r\n\r\n\r\n  const handleVale = () => {\r\n    clearInterval(turnTimerRef.current);\r\n    setIsGameActive(false);\r\n    setShowChangePlayerMessage(true);\r\n    setChangePlayerTimer(7);\r\n    setTurnCounter(prev => prev + 1);\r\n  };\r\n\r\n  const handleTerminar = () => {\r\n    clearInterval(turnTimerRef.current);\r\n    clearInterval(changePlayerTimerRef.current);\r\n    setIsGameActive(false);\r\n    if (onExitGame) {\r\n      onExitGame();\r\n    }\r\n  };\r\n\r\n  const progressPercentage = (turnTimeLeft / 10) * 100;\r\n\r\n  return (\r\n    <div className=\"game-container bg-white p-6 rounded-lg shadow-md text-center relative\">\r\n      <button\r\n        onClick={onExitGame}\r\n        className=\"absolute top-4 left-4 bg-gray-200 hover:bg-gray-300 p-2 rounded-full text-xl\"\r\n      >\r\n        &#8592;\r\n      </button>\r\n\r\n      <h2 className=\"text-2xl font-bold mb-4 text-gray-800\">¡Tetris!</h2>\r\n      <p className=\"text-lg text-gray-700 mb-4\">Turno #{turnCounter}</p>\r\n\r\n\r\n      <div className=\"w-full bg-gray-200 rounded-full h-4 dark:bg-gray-700 mb-6\">\r\n        <div\r\n          className=\"bg-purple-500 h-4 rounded-full transition-all duration-1000 ease-linear\"\r\n          style={{ width: `${progressPercentage}%` }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"text-xl font-bold mb-8 text-purple-700\">Tiempo restante: {turnTimeLeft}s</div>\r\n\r\n      {showChangePlayerMessage ? (\r\n        <div className=\"my-10\">\r\n          <p className=\"text-green-600 text-5xl font-bold mb-4\">¡Cambia de Jugador!</p>\r\n          <p className=\"text-gray-700 text-3xl\">Siguiente pieza en {changePlayerTimer}s</p>\r\n        </div>\r\n      ) : (\r\n        currentPiece ? (\r\n          <>\r\n            <div className=\"text-3xl font-extrabold text-blue-700 my-4\">\r\n              \"{currentPiece.nombre}\"\r\n            </div>\r\n            <div className=\"my-8 flex justify-center\">\r\n              <img \r\n                src={getImageUrl(currentPiece.url_imagen)} // Usamos la función getImageUrl\r\n                alt={currentPiece.nombre} \r\n                className=\"max-h-64 object-contain shadow-lg rounded-lg\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"flex justify-center space-x-4 mt-8\">\r\n              <button\r\n                onClick={handleVale}\r\n                className=\"bg-green-600 hover:bg-green-700 text-white font-bold py-3 px-6 rounded-lg text-lg transition duration-300\"\r\n              >\r\n                ¡Vale!\r\n              </button>\r\n              <button\r\n                onClick={handleTerminar}\r\n                className=\"bg-red-500 hover:bg-red-600 text-white font-bold py-3 px-6 rounded-lg text-lg transition duration-300\"\r\n              >\r\n                Terminar\r\n              </button>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div className=\"text-gray-600 text-xl my-8\">Cargando pieza de Tetris...</div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TetrisGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}