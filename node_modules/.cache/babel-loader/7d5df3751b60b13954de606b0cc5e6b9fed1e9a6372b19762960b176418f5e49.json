{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ramos\\\\Downloads\\\\project\\\\src\\\\components\\\\VeoVeoGame.js\",\n  _s = $RefreshSig$();\n// src/components/VeoVeoGame.js\n\nimport React, { useState, useEffect, useRef } from 'react';\n// import Confetti from 'react-confetti'; // Descomentar si tienes instalado react-confetti\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction VeoVeoGame({\n  players,\n  allowedDifficulties,\n  onExitGame\n}) {\n  _s();\n  var _gameData$currentObje3, _gameData$currentObje4;\n  // Aquí almacenaríamos las pistas filtradas del juego Veo Veo\n  const [gameData, setGameData] = useState([]);\n  const [currentObjectIndex, setCurrentObjectIndex] = useState(0); // Índice del objeto actual (para 5 objetos)\n  const [currentPistaIndex, setCurrentPistaIndex] = useState(0); // Índice de la pista actual del objeto\n  const [timeLeft, setTimeLeft] = useState(25); // Tiempo restante para el temporizador principal\n  const [isGameActive, setIsGameActive] = useState(false); // Si el juego está en curso\n  const [showConfetti, setShowConfetti] = useState(false); // Para la animación de confeti\n  const [nextObjectTimer, setNextObjectTimer] = useState(0); // Temporizador para el siguiente objeto (5 segundos)\n\n  const timerRef = useRef(null); // Para controlar el temporizador principal\n  const nextObjectTimerRef = useRef(null); // Para controlar el temporizador del siguiente objeto\n\n  // Función para cargar y filtrar las pistas según la dificultad\n  useEffect(() => {\n    const veoveoData = require('../mock/veoveo_data.json');\n\n    // ¡CAMBIO CLAVE AQUÍ PARA EL FILTRADO DE DIFICULTAD!\n    const filteredData = veoveoData.filter(item =>\n    // Comprobamos si item.Dificultad existe y si está incluida en allowedDifficulties\n    // Usamos el método .includes() en allowedDifficulties (que es un array)\n    // para ver si el string de dificultad del item está en la lista de dificultades permitidas.\n    item.Dificultad && allowedDifficulties.includes(item.Dificultad));\n\n    // Mapeamos los datos filtrados para usar claves en minúsculas (respuesta, pistas)\n    // para que coincidan con el resto del componente.\n    const mappedData = filteredData.map(item => ({\n      respuesta: item.Objeto,\n      // Mapeamos \"Objeto\" a \"respuesta\"\n      pistas: item.Pistas,\n      // Mapeamos \"Pistas\" a \"pistas\"\n      dificultad: item.Dificultad // Mantenemos la dificultad original si la necesitamos para debug\n    }));\n\n    // Seleccionar 5 objetos al azar de los filtrados\n    const selectedObjects = [];\n    if (mappedData.length > 0) {\n      const shuffledData = [...mappedData].sort(() => 0.5 - Math.random()); // Mezclar\n      for (let i = 0; i < 5 && i < shuffledData.length; i++) {\n        selectedObjects.push(shuffledData[i]);\n      }\n    }\n    setGameData(selectedObjects);\n    console.log(\"Datos de Veo Veo filtrados por dificultad:\", selectedObjects);\n    // Reiniciar el juego si los datos cambian (solo si se vuelve a montar el componente)\n    if (selectedObjects.length > 0) {\n      setCurrentObjectIndex(0);\n      setCurrentPistaIndex(0);\n      setTimeLeft(25);\n      setIsGameActive(true);\n      // Iniciar el temporizador principal solo si el juego está activo y no hay un temporizador de \"siguiente objeto\"\n      if (!nextObjectTimerRef.current) {\n        startMainTimer();\n      }\n    } else {\n      setIsGameActive(false);\n      console.log(\"No hay objetos de Veo Veo para la dificultad seleccionada.\");\n    }\n\n    // Limpieza al desmontar el componente o al cambiar la dependencia\n    return () => {\n      clearInterval(timerRef.current);\n      clearInterval(nextObjectTimerRef.current);\n    };\n  }, [allowedDifficulties]); // Se ejecuta cuando las dificultades permitidas cambian\n\n  // useEffect para manejar el temporizador principal (25 segundos por objeto)\n  useEffect(() => {\n    if (isGameActive && timeLeft > 0 && nextObjectTimer === 0) {\n      timerRef.current = setInterval(() => {\n        setTimeLeft(prevTime => prevTime - 1);\n      }, 1000);\n    } else if (timeLeft === 0 && isGameActive) {\n      var _gameData$currentObje;\n      clearInterval(timerRef.current);\n      // Se acabó el tiempo para este objeto\n      console.log(\"¡Se acabó el tiempo! El objeto era:\", (_gameData$currentObje = gameData[currentObjectIndex]) === null || _gameData$currentObje === void 0 ? void 0 : _gameData$currentObje.respuesta);\n      startNextObjectTimer(true); // Inicia el temporizador de 5 segundos, indicando que fue por tiempo agotado\n      setIsGameActive(false); // Pausa el juego principal\n    }\n    return () => clearInterval(timerRef.current);\n  }, [timeLeft, isGameActive, nextObjectTimer, currentObjectIndex, gameData]); // Agregué currentObjectIndex y gameData como dependencias.\n\n  // Función para iniciar el temporizador principal (25 segundos)\n  const startMainTimer = () => {\n    clearInterval(timerRef.current); // Asegura que no haya múltiples temporizadores\n    setTimeLeft(25);\n    setIsGameActive(true);\n    setNextObjectTimer(0); // Asegurarse de que el temporizador de \"siguiente objeto\" esté en 0\n  };\n\n  // Función para iniciar el temporizador de 5 segundos para el siguiente objeto\n  const startNextObjectTimer = (timeUp = false) => {\n    setShowConfetti(false); // Ocultar confeti\n    setNextObjectTimer(5);\n    clearInterval(nextObjectTimerRef.current); // Limpia cualquier temporizador previo\n    clearInterval(timerRef.current); // Asegúrate de detener el temporizador principal también\n\n    nextObjectTimerRef.current = setInterval(() => {\n      setNextObjectTimer(prevTime => {\n        if (prevTime <= 1) {\n          clearInterval(nextObjectTimerRef.current);\n          handleNextObject(); // Avanza al siguiente objeto\n          return 0;\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n  };\n\n  // Función para avanzar al siguiente objeto\n  const handleNextObject = () => {\n    // Comprobar si quedan más objetos (hasta 5)\n    if (currentObjectIndex < 4 && gameData.length > currentObjectIndex + 1) {\n      setCurrentObjectIndex(prevIndex => prevIndex + 1);\n      setCurrentPistaIndex(0); // Reiniciar pistas para el nuevo objeto\n      startMainTimer(); // Iniciar temporizador para el nuevo objeto\n    } else {\n      // Si no quedan más objetos, el juego termina\n      console.log(\"¡Juego de Veo Veo Terminado!\");\n      setIsGameActive(false);\n      clearInterval(timerRef.current);\n      clearInterval(nextObjectTimerRef.current);\n      if (onExitGame) {\n        onExitGame(); // Vuelve al GameSelector\n      }\n    }\n  };\n\n  // Función para el botón \"Adiviné\"\n  const handleAdivine = () => {\n    var _gameData$currentObje2;\n    clearInterval(timerRef.current); // Detener el temporizador principal\n    setIsGameActive(false); // Pausar el juego principal\n    setShowConfetti(true); // Mostrar confeti\n\n    console.log(\"¡Adivinó el objeto:\", (_gameData$currentObje2 = gameData[currentObjectIndex]) === null || _gameData$currentObje2 === void 0 ? void 0 : _gameData$currentObje2.respuesta);\n    startNextObjectTimer(); // Inicia el temporizador de 5 segundos para el siguiente objeto\n  };\n\n  // Función para el botón \"Otra Pista\"\n  const handleOtraPista = () => {\n    const currentObject = gameData[currentObjectIndex];\n    if (currentObject && currentPistaIndex < currentObject.pistas.length - 1) {\n      setCurrentPistaIndex(prevIndex => prevIndex + 1);\n    } else {\n      console.log(\"No hay más pistas para este objeto.\");\n      // Si no hay más pistas, podríamos avanzar al siguiente objeto o mostrar la respuesta.\n      // Por ahora, si no hay más pistas, se asume que el usuario debe adivinar o el tiempo se agota.\n    }\n  };\n\n  // Muestra \"Cargando...\" o similar si no hay datos filtrados o el juego no ha comenzado\n  if (!isGameActive && gameData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md mx-auto mt-8 bg-white p-6 rounded-lg shadow-md text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4 text-gray-800\",\n        children: \"Cargando juego Veo Veo...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"Aseg\\xFArate de que hay datos de Veo Veo para las dificultades seleccionadas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onExitGame,\n        className: \"mt-4 bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded\",\n        children: \"Salir del Juego\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Si no hay objeto actual (por ejemplo, juego terminado o error)\n  if (!gameData[currentObjectIndex]) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md mx-auto mt-8 bg-white p-6 rounded-lg shadow-md text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4 text-gray-800\",\n        children: \"Juego Veo Veo Terminado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"Gracias por jugar. \\xA1Vuelve pronto!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onExitGame,\n        className: \"mt-4 bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded\",\n        children: \"Volver al Selector de Juego\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Renderizado principal del juego\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container bg-white p-6 rounded-lg shadow-md text-center relative\",\n    children: [showConfetti &&\n    /*#__PURE__*/\n    // <Confetti\n    //   width={window.innerWidth}\n    //   height={window.innerHeight}\n    //   recycle={false} // Para que se dispare una sola vez\n    //   numberOfPieces={200}\n    //   gravity={0.1}\n    // />\n    _jsxDEV(\"div\", {\n      className: \"confetti-placeholder text-4xl mb-4\",\n      children: \"\\uD83C\\uDF89 Confeti! \\uD83C\\uDF89\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }, this) // Placeholder visual\n    , /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onExitGame,\n      className: \"absolute top-4 left-4 bg-gray-200 hover:bg-gray-300 p-2 rounded-full text-xl\",\n      children: \"\\u2190 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4 text-gray-800\",\n      children: \"\\xA1Veo Veo!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg text-gray-700 mb-2\",\n      children: [\"Objeto \", currentObjectIndex + 1, \" de \", gameData.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-xl font-bold mb-4\",\n      children: [\"Tiempo restante: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-red-500\",\n        children: [timeLeft, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 64\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-4xl font-extrabold text-blue-600 my-8\",\n      children: nextObjectTimer > 0 ?\n      // Si el temporizador de siguiente objeto está activo\n      showConfetti ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-600\",\n        children: [\"\\xA1Correcto! Siguiente objeto en \", nextObjectTimer, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-600\",\n        children: [\"\\xA1Se acab\\xF3 el tiempo! Era: \\\"\", (_gameData$currentObje3 = gameData[currentObjectIndex]) === null || _gameData$currentObje3 === void 0 ? void 0 : _gameData$currentObje3.respuesta, \"\\\". Siguiente en \", nextObjectTimer, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }, this) :\n      /*#__PURE__*/\n      // Si el temporizador de siguiente objeto no está activo\n      _jsxDEV(\"p\", {\n        className: \"text-blue-600\",\n        children: [\"\\\"\", (_gameData$currentObje4 = gameData[currentObjectIndex]) === null || _gameData$currentObje4 === void 0 ? void 0 : _gameData$currentObje4.pistas[currentPistaIndex], \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center space-x-4 mt-8\",\n      children: isGameActive && nextObjectTimer === 0 &&\n      /*#__PURE__*/\n      // Solo muestra botones si el juego está activo y no es tiempo de espera\n      _jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAdivine,\n          className: \"bg-purple-600 hover:bg-purple-700 text-white font-bold py-3 px-6 rounded-lg text-lg transition duration-300\",\n          children: \"\\xA1Adivin\\xE9!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleOtraPista,\n          className: \"bg-yellow-600 hover:bg-yellow-700 text-white font-bold py-3 px-6 rounded-lg text-lg transition duration-300\",\n          children: \"Otra Pista\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n}\n_s(VeoVeoGame, \"H7hInhNmHYK7eG7MDmUmk33NX4M=\");\n_c = VeoVeoGame;\nexport default VeoVeoGame;\nvar _c;\n$RefreshReg$(_c, \"VeoVeoGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","VeoVeoGame","players","allowedDifficulties","onExitGame","_s","_gameData$currentObje3","_gameData$currentObje4","gameData","setGameData","currentObjectIndex","setCurrentObjectIndex","currentPistaIndex","setCurrentPistaIndex","timeLeft","setTimeLeft","isGameActive","setIsGameActive","showConfetti","setShowConfetti","nextObjectTimer","setNextObjectTimer","timerRef","nextObjectTimerRef","veoveoData","require","filteredData","filter","item","Dificultad","includes","mappedData","map","respuesta","Objeto","pistas","Pistas","dificultad","selectedObjects","length","shuffledData","sort","Math","random","i","push","console","log","current","startMainTimer","clearInterval","setInterval","prevTime","_gameData$currentObje","startNextObjectTimer","timeUp","handleNextObject","prevIndex","handleAdivine","_gameData$currentObje2","handleOtraPista","currentObject","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ramos/Downloads/project/src/components/VeoVeoGame.js"],"sourcesContent":["// src/components/VeoVeoGame.js\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\n// import Confetti from 'react-confetti'; // Descomentar si tienes instalado react-confetti\r\n\r\nfunction VeoVeoGame({ players, allowedDifficulties, onExitGame }) {\r\n  // Aquí almacenaríamos las pistas filtradas del juego Veo Veo\r\n  const [gameData, setGameData] = useState([]);\r\n  const [currentObjectIndex, setCurrentObjectIndex] = useState(0); // Índice del objeto actual (para 5 objetos)\r\n  const [currentPistaIndex, setCurrentPistaIndex] = useState(0); // Índice de la pista actual del objeto\r\n  const [timeLeft, setTimeLeft] = useState(25); // Tiempo restante para el temporizador principal\r\n  const [isGameActive, setIsGameActive] = useState(false); // Si el juego está en curso\r\n  const [showConfetti, setShowConfetti] = useState(false); // Para la animación de confeti\r\n  const [nextObjectTimer, setNextObjectTimer] = useState(0); // Temporizador para el siguiente objeto (5 segundos)\r\n\r\n  const timerRef = useRef(null); // Para controlar el temporizador principal\r\n  const nextObjectTimerRef = useRef(null); // Para controlar el temporizador del siguiente objeto\r\n\r\n  // Función para cargar y filtrar las pistas según la dificultad\r\n  useEffect(() => {\r\n    const veoveoData = require('../mock/veoveo_data.json');\r\n\r\n    // ¡CAMBIO CLAVE AQUÍ PARA EL FILTRADO DE DIFICULTAD!\r\n    const filteredData = veoveoData.filter(item =>\r\n      // Comprobamos si item.Dificultad existe y si está incluida en allowedDifficulties\r\n      // Usamos el método .includes() en allowedDifficulties (que es un array)\r\n      // para ver si el string de dificultad del item está en la lista de dificultades permitidas.\r\n      item.Dificultad && allowedDifficulties.includes(item.Dificultad)\r\n    );\r\n\r\n    // Mapeamos los datos filtrados para usar claves en minúsculas (respuesta, pistas)\r\n    // para que coincidan con el resto del componente.\r\n    const mappedData = filteredData.map(item => ({\r\n      respuesta: item.Objeto, // Mapeamos \"Objeto\" a \"respuesta\"\r\n      pistas: item.Pistas,    // Mapeamos \"Pistas\" a \"pistas\"\r\n      dificultad: item.Dificultad // Mantenemos la dificultad original si la necesitamos para debug\r\n    }));\r\n\r\n    // Seleccionar 5 objetos al azar de los filtrados\r\n    const selectedObjects = [];\r\n    if (mappedData.length > 0) {\r\n      const shuffledData = [...mappedData].sort(() => 0.5 - Math.random()); // Mezclar\r\n      for (let i = 0; i < 5 && i < shuffledData.length; i++) {\r\n        selectedObjects.push(shuffledData[i]);\r\n      }\r\n    }\r\n    setGameData(selectedObjects);\r\n\r\n    console.log(\"Datos de Veo Veo filtrados por dificultad:\", selectedObjects);\r\n    // Reiniciar el juego si los datos cambian (solo si se vuelve a montar el componente)\r\n    if (selectedObjects.length > 0) {\r\n      setCurrentObjectIndex(0);\r\n      setCurrentPistaIndex(0);\r\n      setTimeLeft(25);\r\n      setIsGameActive(true);\r\n      // Iniciar el temporizador principal solo si el juego está activo y no hay un temporizador de \"siguiente objeto\"\r\n      if (!nextObjectTimerRef.current) {\r\n         startMainTimer();\r\n      }\r\n    } else {\r\n      setIsGameActive(false);\r\n      console.log(\"No hay objetos de Veo Veo para la dificultad seleccionada.\");\r\n    }\r\n\r\n    // Limpieza al desmontar el componente o al cambiar la dependencia\r\n    return () => {\r\n      clearInterval(timerRef.current);\r\n      clearInterval(nextObjectTimerRef.current);\r\n    };\r\n  }, [allowedDifficulties]); // Se ejecuta cuando las dificultades permitidas cambian\r\n\r\n\r\n  // useEffect para manejar el temporizador principal (25 segundos por objeto)\r\n  useEffect(() => {\r\n    if (isGameActive && timeLeft > 0 && nextObjectTimer === 0) {\r\n      timerRef.current = setInterval(() => {\r\n        setTimeLeft(prevTime => prevTime - 1);\r\n      }, 1000);\r\n    } else if (timeLeft === 0 && isGameActive) {\r\n      clearInterval(timerRef.current);\r\n      // Se acabó el tiempo para este objeto\r\n      console.log(\"¡Se acabó el tiempo! El objeto era:\", gameData[currentObjectIndex]?.respuesta);\r\n      startNextObjectTimer(true); // Inicia el temporizador de 5 segundos, indicando que fue por tiempo agotado\r\n      setIsGameActive(false); // Pausa el juego principal\r\n    }\r\n\r\n    return () => clearInterval(timerRef.current);\r\n  }, [timeLeft, isGameActive, nextObjectTimer, currentObjectIndex, gameData]); // Agregué currentObjectIndex y gameData como dependencias.\r\n\r\n\r\n  // Función para iniciar el temporizador principal (25 segundos)\r\n  const startMainTimer = () => {\r\n    clearInterval(timerRef.current); // Asegura que no haya múltiples temporizadores\r\n    setTimeLeft(25);\r\n    setIsGameActive(true);\r\n    setNextObjectTimer(0); // Asegurarse de que el temporizador de \"siguiente objeto\" esté en 0\r\n  };\r\n\r\n  // Función para iniciar el temporizador de 5 segundos para el siguiente objeto\r\n  const startNextObjectTimer = (timeUp = false) => {\r\n    setShowConfetti(false); // Ocultar confeti\r\n    setNextObjectTimer(5);\r\n    clearInterval(nextObjectTimerRef.current); // Limpia cualquier temporizador previo\r\n    clearInterval(timerRef.current); // Asegúrate de detener el temporizador principal también\r\n\r\n    nextObjectTimerRef.current = setInterval(() => {\r\n      setNextObjectTimer(prevTime => {\r\n        if (prevTime <= 1) {\r\n          clearInterval(nextObjectTimerRef.current);\r\n          handleNextObject(); // Avanza al siguiente objeto\r\n          return 0;\r\n        }\r\n        return prevTime - 1;\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  // Función para avanzar al siguiente objeto\r\n  const handleNextObject = () => {\r\n    // Comprobar si quedan más objetos (hasta 5)\r\n    if (currentObjectIndex < 4 && gameData.length > (currentObjectIndex + 1)) {\r\n      setCurrentObjectIndex(prevIndex => prevIndex + 1);\r\n      setCurrentPistaIndex(0); // Reiniciar pistas para el nuevo objeto\r\n      startMainTimer(); // Iniciar temporizador para el nuevo objeto\r\n    } else {\r\n      // Si no quedan más objetos, el juego termina\r\n      console.log(\"¡Juego de Veo Veo Terminado!\");\r\n      setIsGameActive(false);\r\n      clearInterval(timerRef.current);\r\n      clearInterval(nextObjectTimerRef.current);\r\n      if (onExitGame) {\r\n        onExitGame(); // Vuelve al GameSelector\r\n      }\r\n    }\r\n  };\r\n\r\n  // Función para el botón \"Adiviné\"\r\n  const handleAdivine = () => {\r\n    clearInterval(timerRef.current); // Detener el temporizador principal\r\n    setIsGameActive(false); // Pausar el juego principal\r\n    setShowConfetti(true); // Mostrar confeti\r\n\r\n    console.log(\"¡Adivinó el objeto:\", gameData[currentObjectIndex]?.respuesta);\r\n    startNextObjectTimer(); // Inicia el temporizador de 5 segundos para el siguiente objeto\r\n  };\r\n\r\n  // Función para el botón \"Otra Pista\"\r\n  const handleOtraPista = () => {\r\n    const currentObject = gameData[currentObjectIndex];\r\n    if (currentObject && currentPistaIndex < currentObject.pistas.length - 1) {\r\n      setCurrentPistaIndex(prevIndex => prevIndex + 1);\r\n    } else {\r\n      console.log(\"No hay más pistas para este objeto.\");\r\n      // Si no hay más pistas, podríamos avanzar al siguiente objeto o mostrar la respuesta.\r\n      // Por ahora, si no hay más pistas, se asume que el usuario debe adivinar o el tiempo se agota.\r\n    }\r\n  };\r\n\r\n  // Muestra \"Cargando...\" o similar si no hay datos filtrados o el juego no ha comenzado\r\n  if (!isGameActive && gameData.length === 0) {\r\n    return (\r\n      <div className=\"max-w-md mx-auto mt-8 bg-white p-6 rounded-lg shadow-md text-center\">\r\n        <h2 className=\"text-2xl font-bold mb-4 text-gray-800\">Cargando juego Veo Veo...</h2>\r\n        <p className=\"text-gray-600\">Asegúrate de que hay datos de Veo Veo para las dificultades seleccionadas.</p>\r\n        <button onClick={onExitGame} className=\"mt-4 bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded\">\r\n          Salir del Juego\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Si no hay objeto actual (por ejemplo, juego terminado o error)\r\n  if (!gameData[currentObjectIndex]) {\r\n    return (\r\n      <div className=\"max-w-md mx-auto mt-8 bg-white p-6 rounded-lg shadow-md text-center\">\r\n        <h2 className=\"text-2xl font-bold mb-4 text-gray-800\">Juego Veo Veo Terminado</h2>\r\n        <p className=\"text-gray-600\">Gracias por jugar. ¡Vuelve pronto!</p>\r\n        <button onClick={onExitGame} className=\"mt-4 bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded\">\r\n          Volver al Selector de Juego\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Renderizado principal del juego\r\n  return (\r\n    <div className=\"game-container bg-white p-6 rounded-lg shadow-md text-center relative\">\r\n      {showConfetti && (\r\n        // <Confetti\r\n        //   width={window.innerWidth}\r\n        //   height={window.innerHeight}\r\n        //   recycle={false} // Para que se dispare una sola vez\r\n        //   numberOfPieces={200}\r\n        //   gravity={0.1}\r\n        // />\r\n        <div className=\"confetti-placeholder text-4xl mb-4\">🎉 Confeti! 🎉</div> // Placeholder visual\r\n      )}\r\n\r\n      {/* Botón de Salir del Juego */}\r\n      <button\r\n        onClick={onExitGame}\r\n        className=\"absolute top-4 left-4 bg-gray-200 hover:bg-gray-300 p-2 rounded-full text-xl\"\r\n      >\r\n        &#8592; {/* Flecha de atrás */}\r\n      </button>\r\n\r\n      <h2 className=\"text-2xl font-bold mb-4 text-gray-800\">¡Veo Veo!</h2>\r\n\r\n      {/* Contador de objeto actual / total de objetos */}\r\n      <p className=\"text-lg text-gray-700 mb-2\">Objeto {currentObjectIndex + 1} de {gameData.length}</p>\r\n\r\n      {/* Temporizador principal */}\r\n      <div className=\"text-xl font-bold mb-4\">Tiempo restante: <span className=\"text-red-500\">{timeLeft}s</span></div>\r\n\r\n      {/* Pista actual */}\r\n      <div className=\"text-4xl font-extrabold text-blue-600 my-8\">\r\n        {nextObjectTimer > 0 ? ( // Si el temporizador de siguiente objeto está activo\r\n          showConfetti ? (\r\n            <p className=\"text-green-600\">¡Correcto! Siguiente objeto en {nextObjectTimer}s</p>\r\n          ) : (\r\n            <p className=\"text-red-600\">¡Se acabó el tiempo! Era: \"{gameData[currentObjectIndex]?.respuesta}\". Siguiente en {nextObjectTimer}s</p>\r\n          )\r\n        ) : ( // Si el temporizador de siguiente objeto no está activo\r\n          <p className=\"text-blue-600\">\"{gameData[currentObjectIndex]?.pistas[currentPistaIndex]}\"</p>\r\n        )}\r\n      </div>\r\n\r\n      {/* Botones de acción */}\r\n      <div className=\"flex justify-center space-x-4 mt-8\">\r\n        {isGameActive && nextObjectTimer === 0 && ( // Solo muestra botones si el juego está activo y no es tiempo de espera\r\n          <>\r\n            <button\r\n              onClick={handleAdivine}\r\n              className=\"bg-purple-600 hover:bg-purple-700 text-white font-bold py-3 px-6 rounded-lg text-lg transition duration-300\"\r\n            >\r\n              ¡Adiviné!\r\n            </button>\r\n            <button\r\n              onClick={handleOtraPista}\r\n              className=\"bg-yellow-600 hover:bg-yellow-700 text-white font-bold py-3 px-6 rounded-lg text-lg transition duration-300\"\r\n            >\r\n              Otra Pista\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VeoVeoGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}