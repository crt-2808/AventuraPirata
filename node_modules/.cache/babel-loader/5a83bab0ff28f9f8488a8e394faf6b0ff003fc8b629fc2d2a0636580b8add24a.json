{"ast":null,"code":"import React,{useState,useEffect,useRef,useCallback}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function JengaGame(_ref){let{players,onExitGame}=_ref;// Jenga no necesita tetrisPieces ni currentPiece\n// const [tetrisPieces, setTetrisPieces] = useState([]);\n// const [currentPiece, setCurrentPiece] = useState(null);\nconst[turnTimeLeft,setTurnTimeLeft]=useState(10);// Tiempo restante en el turno actual\nconst[showChangePlayerMessage,setShowChangePlayerMessage]=useState(false);const[changePlayerTimer,setChangePlayerTimer]=useState(3);// 3 segundos para cambio de jugador\nconst[isGameActive,setIsGameActive]=useState(false);const[turnCounter,setTurnCounter]=useState(0);// Inicia en 0, se incrementa antes de cada turno.\nconst turnTimerRef=useRef(null);const changePlayerTimerRef=useRef(null);// Función para calcular el tiempo base del turno según el contador\n// Misma lógica que en TetrisGame para la dificultad progresiva\nconst getBaseTurnDuration=useCallback(currentTurn=>{let baseTime=10;// Tiempo inicial base\nconst reduction=Math.floor((currentTurn-1)/5);// Cada 5 turnos, reduce 1 segundo\nreturn Math.max(1,baseTime-reduction);// Mínimo de 1 segundo\n},[]);const startTurnTimer=useCallback(turnNumber=>{clearInterval(turnTimerRef.current);const duration=getBaseTurnDuration(turnNumber);setTurnTimeLeft(duration);setIsGameActive(true);console.log(\"Jenga - Turno #\".concat(turnNumber,\". Duraci\\xF3n del turno: \").concat(duration,\"s\"));// Para depuración\n},[getBaseTurnDuration]);// Lógica para avanzar al siguiente turno\nconst handleNextTurnLogic=useCallback(()=>{clearInterval(turnTimerRef.current);const nextTurnNumber=turnCounter+1;// Calculamos el número del siguiente turno\nsetTurnCounter(nextTurnNumber);// Actualizamos el contador de turnos\n// En Jenga, no hay una \"pieza\" que cargar, solo iniciar el siguiente turno\nstartTurnTimer(nextTurnNumber);// Inicia el temporizador para el nuevo turno\nsetIsGameActive(true);// No hay caso de \"no hay más piezas\" en Jenga, a menos que definas un límite de turnos\n// Si quisieras un límite, lo agregarías aquí, por ejemplo:\n// if (nextTurnNumber > MAX_JENGA_TURNS) {\n//    console.log(\"Juego de Jenga terminado por límite de turnos.\");\n//    setIsGameActive(false);\n//    if (onExitGame) {\n//      onExitGame();\n//    }\n// }\n},[turnCounter,onExitGame,startTurnTimer]);// useEffect para iniciar el juego de Jenga\nuseEffect(()=>{// En Jenga, no hay datos externos que cargar como en Tetris.\n// Simplemente iniciamos el primer turno.\nconst initialTurnNumber=1;setTurnCounter(initialTurnNumber);// Establece el turno inicial a 1\nstartTurnTimer(initialTurnNumber);// Inicia el temporizador para el primer turno\nsetIsGameActive(true);return()=>{clearInterval(turnTimerRef.current);clearInterval(changePlayerTimerRef.current);};},[startTurnTimer]);// --- Lógica del Temporizador de Turno ---\nuseEffect(()=>{if(isGameActive&&turnTimeLeft>0&&!showChangePlayerMessage){turnTimerRef.current=setInterval(()=>{setTurnTimeLeft(prevTime=>prevTime-1);},1000);}else if(turnTimeLeft===0&&isGameActive){clearInterval(turnTimerRef.current);console.log(\"Jenga - ¡Tiempo agotado para el turno!\");setIsGameActive(false);setShowChangePlayerMessage(true);setChangePlayerTimer(3);// Reinicia a 3 segundos para el mensaje de cambio de jugador\n}return()=>clearInterval(turnTimerRef.current);},[turnTimeLeft,isGameActive,showChangePlayerMessage]);// --- Lógica del Temporizador de Cambio de Jugador ---\nuseEffect(()=>{if(showChangePlayerMessage&&changePlayerTimer>0){changePlayerTimerRef.current=setInterval(()=>{setChangePlayerTimer(prevTime=>prevTime-1);},1000);}else if(changePlayerTimer===0&&showChangePlayerMessage){clearInterval(changePlayerTimerRef.current);setShowChangePlayerMessage(false);handleNextTurnLogic();// Avanza al siguiente turno\n}return()=>clearInterval(changePlayerTimerRef.current);},[showChangePlayerMessage,changePlayerTimer,handleNextTurnLogic]);const handleVale=()=>{clearInterval(turnTimerRef.current);setIsGameActive(false);// Pausa el temporizador de turno\nsetShowChangePlayerMessage(true);// Muestra el mensaje de cambio de jugador\nsetChangePlayerTimer(3);// Inicia el temporizador de cambio de jugador\n// handleNextTurnLogic se llamará automáticamente después de 3 segundos\n};const handleTerminar=()=>{clearInterval(turnTimerRef.current);clearInterval(changePlayerTimerRef.current);setIsGameActive(false);if(onExitGame){onExitGame();}};// La barra de progreso se basa en el tiempo inicial del turno\nconst currentTurnBaseDuration=getBaseTurnDuration(turnCounter>0?turnCounter:1);const progressPercentage=turnTimeLeft/currentTurnBaseDuration*100;return/*#__PURE__*/_jsxs(\"div\",{className:\"game-container bg-white p-6 rounded-lg shadow-md text-center relative\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:onExitGame,className:\"absolute top-4 left-4 bg-gray-200 hover:bg-gray-300 p-2 rounded-full text-xl\",children:\"\\u2190\"}),/*#__PURE__*/_jsx(\"h2\",{className:\"text-3xl font-bold mb-4 text-gray-800\",children:\"\\xA1Jenga!\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-xl text-gray-700 mb-4\",children:[\"Turno #\",turnCounter]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 rounded-full h-4 dark:bg-gray-700 mb-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-red-500 h-4 rounded-full transition-all duration-1000 ease-linear\",style:{width:\"\".concat(progressPercentage,\"%\")}})}),showChangePlayerMessage?/*#__PURE__*/_jsxs(\"div\",{className:\"my-10\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-green-600 text-5xl font-bold mb-4\",children:\"\\xA1Cambia de Jugador!\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-gray-700 text-3xl\",children:[\"Siguiente turno en \",changePlayerTimer,\"s\"]})]}):/*#__PURE__*/// Muestra el tiempo restante grande y centrado\n_jsxs(\"div\",{className:\"my-8\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"text-8xl font-extrabold text-red-700 leading-none\",children:[turnTimeLeft,/*#__PURE__*/_jsx(\"span\",{className:\"text-4xl\",children:\"s\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-2xl text-gray-600 mt-4\",children:\"Tiempo para tu movimiento\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-center space-x-4 mt-8\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleVale,className:\"bg-green-600 hover:bg-green-700 text-white font-bold py-3 px-6 rounded-lg text-lg transition duration-300\",children:\"\\xA1Vale!\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleTerminar,className:\"bg-red-500 hover:bg-red-600 text-white font-bold py-3 px-6 rounded-lg text-lg transition duration-300\",children:\"Terminar Juego\"})]})]});}export default JengaGame;","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","jsx","_jsx","jsxs","_jsxs","JengaGame","_ref","players","onExitGame","turnTimeLeft","setTurnTimeLeft","showChangePlayerMessage","setShowChangePlayerMessage","changePlayerTimer","setChangePlayerTimer","isGameActive","setIsGameActive","turnCounter","setTurnCounter","turnTimerRef","changePlayerTimerRef","getBaseTurnDuration","currentTurn","baseTime","reduction","Math","floor","max","startTurnTimer","turnNumber","clearInterval","current","duration","console","log","concat","handleNextTurnLogic","nextTurnNumber","initialTurnNumber","setInterval","prevTime","handleVale","handleTerminar","currentTurnBaseDuration","progressPercentage","className","children","onClick","style","width"],"sources":["D:/Proyectos Code/project/src/components/JengaGame.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\n\r\nfunction JengaGame({ players, onExitGame }) {\r\n  // Jenga no necesita tetrisPieces ni currentPiece\r\n  // const [tetrisPieces, setTetrisPieces] = useState([]);\r\n  // const [currentPiece, setCurrentPiece] = useState(null);\r\n\r\n  const [turnTimeLeft, setTurnTimeLeft] = useState(10); // Tiempo restante en el turno actual\r\n  const [showChangePlayerMessage, setShowChangePlayerMessage] = useState(false);\r\n  const [changePlayerTimer, setChangePlayerTimer] = useState(3); // 3 segundos para cambio de jugador\r\n  const [isGameActive, setIsGameActive] = useState(false);\r\n  const [turnCounter, setTurnCounter] = useState(0); // Inicia en 0, se incrementa antes de cada turno.\r\n\r\n  const turnTimerRef = useRef(null);\r\n  const changePlayerTimerRef = useRef(null);\r\n\r\n  // Función para calcular el tiempo base del turno según el contador\r\n  // Misma lógica que en TetrisGame para la dificultad progresiva\r\n  const getBaseTurnDuration = useCallback((currentTurn) => {\r\n    let baseTime = 10; // Tiempo inicial base\r\n    const reduction = Math.floor((currentTurn - 1) / 5); // Cada 5 turnos, reduce 1 segundo\r\n    return Math.max(1, baseTime - reduction); // Mínimo de 1 segundo\r\n  }, []);\r\n\r\n\r\n  const startTurnTimer = useCallback((turnNumber) => {\r\n    clearInterval(turnTimerRef.current);\r\n    const duration = getBaseTurnDuration(turnNumber);\r\n    setTurnTimeLeft(duration);\r\n    setIsGameActive(true);\r\n    console.log(`Jenga - Turno #${turnNumber}. Duración del turno: ${duration}s`); // Para depuración\r\n  }, [getBaseTurnDuration]);\r\n\r\n\r\n  // Lógica para avanzar al siguiente turno\r\n  const handleNextTurnLogic = useCallback(() => {\r\n    clearInterval(turnTimerRef.current);\r\n\r\n    const nextTurnNumber = turnCounter + 1; // Calculamos el número del siguiente turno\r\n    setTurnCounter(nextTurnNumber); // Actualizamos el contador de turnos\r\n\r\n    // En Jenga, no hay una \"pieza\" que cargar, solo iniciar el siguiente turno\r\n    startTurnTimer(nextTurnNumber); // Inicia el temporizador para el nuevo turno\r\n    setIsGameActive(true);\r\n\r\n    // No hay caso de \"no hay más piezas\" en Jenga, a menos que definas un límite de turnos\r\n    // Si quisieras un límite, lo agregarías aquí, por ejemplo:\r\n    // if (nextTurnNumber > MAX_JENGA_TURNS) {\r\n    //    console.log(\"Juego de Jenga terminado por límite de turnos.\");\r\n    //    setIsGameActive(false);\r\n    //    if (onExitGame) {\r\n    //      onExitGame();\r\n    //    }\r\n    // }\r\n\r\n  }, [turnCounter, onExitGame, startTurnTimer]);\r\n\r\n\r\n  // useEffect para iniciar el juego de Jenga\r\n  useEffect(() => {\r\n    // En Jenga, no hay datos externos que cargar como en Tetris.\r\n    // Simplemente iniciamos el primer turno.\r\n    const initialTurnNumber = 1;\r\n    setTurnCounter(initialTurnNumber); // Establece el turno inicial a 1\r\n    startTurnTimer(initialTurnNumber); // Inicia el temporizador para el primer turno\r\n    setIsGameActive(true);\r\n\r\n    return () => {\r\n      clearInterval(turnTimerRef.current);\r\n      clearInterval(changePlayerTimerRef.current);\r\n    };\r\n  }, [startTurnTimer]);\r\n\r\n\r\n  // --- Lógica del Temporizador de Turno ---\r\n  useEffect(() => {\r\n    if (isGameActive && turnTimeLeft > 0 && !showChangePlayerMessage) {\r\n      turnTimerRef.current = setInterval(() => {\r\n        setTurnTimeLeft(prevTime => prevTime - 1);\r\n      }, 1000);\r\n    } else if (turnTimeLeft === 0 && isGameActive) {\r\n      clearInterval(turnTimerRef.current);\r\n      console.log(\"Jenga - ¡Tiempo agotado para el turno!\");\r\n      setIsGameActive(false);\r\n      setShowChangePlayerMessage(true);\r\n      setChangePlayerTimer(3); // Reinicia a 3 segundos para el mensaje de cambio de jugador\r\n    }\r\n    return () => clearInterval(turnTimerRef.current);\r\n  }, [turnTimeLeft, isGameActive, showChangePlayerMessage]);\r\n\r\n  // --- Lógica del Temporizador de Cambio de Jugador ---\r\n  useEffect(() => {\r\n    if (showChangePlayerMessage && changePlayerTimer > 0) {\r\n      changePlayerTimerRef.current = setInterval(() => {\r\n        setChangePlayerTimer(prevTime => prevTime - 1);\r\n      }, 1000);\r\n    } else if (changePlayerTimer === 0 && showChangePlayerMessage) {\r\n      clearInterval(changePlayerTimerRef.current);\r\n      setShowChangePlayerMessage(false);\r\n      handleNextTurnLogic(); // Avanza al siguiente turno\r\n    }\r\n    return () => clearInterval(changePlayerTimerRef.current);\r\n  }, [showChangePlayerMessage, changePlayerTimer, handleNextTurnLogic]);\r\n\r\n\r\n  const handleVale = () => {\r\n    clearInterval(turnTimerRef.current);\r\n    setIsGameActive(false); // Pausa el temporizador de turno\r\n    setShowChangePlayerMessage(true); // Muestra el mensaje de cambio de jugador\r\n    setChangePlayerTimer(3); // Inicia el temporizador de cambio de jugador\r\n    // handleNextTurnLogic se llamará automáticamente después de 3 segundos\r\n  };\r\n\r\n  const handleTerminar = () => {\r\n    clearInterval(turnTimerRef.current);\r\n    clearInterval(changePlayerTimerRef.current);\r\n    setIsGameActive(false);\r\n    if (onExitGame) {\r\n      onExitGame();\r\n    }\r\n  };\r\n\r\n  // La barra de progreso se basa en el tiempo inicial del turno\r\n  const currentTurnBaseDuration = getBaseTurnDuration(turnCounter > 0 ? turnCounter : 1);\r\n  const progressPercentage = (turnTimeLeft / currentTurnBaseDuration) * 100;\r\n\r\n\r\n  return (\r\n    <div className=\"game-container bg-white p-6 rounded-lg shadow-md text-center relative\">\r\n      <button\r\n        onClick={onExitGame}\r\n        className=\"absolute top-4 left-4 bg-gray-200 hover:bg-gray-300 p-2 rounded-full text-xl\"\r\n      >\r\n        &#8592;\r\n      </button>\r\n\r\n      <h2 className=\"text-3xl font-bold mb-4 text-gray-800\">¡Jenga!</h2>\r\n      <p className=\"text-xl text-gray-700 mb-4\">Turno #{turnCounter}</p>\r\n\r\n\r\n      <div className=\"w-full bg-gray-200 rounded-full h-4 dark:bg-gray-700 mb-6\">\r\n        <div\r\n          className=\"bg-red-500 h-4 rounded-full transition-all duration-1000 ease-linear\"\r\n          style={{ width: `${progressPercentage}%` }}\r\n        ></div>\r\n      </div>\r\n\r\n      {showChangePlayerMessage ? (\r\n        <div className=\"my-10\">\r\n          <p className=\"text-green-600 text-5xl font-bold mb-4\">¡Cambia de Jugador!</p>\r\n          <p className=\"text-gray-700 text-3xl\">Siguiente turno en {changePlayerTimer}s</p>\r\n        </div>\r\n      ) : (\r\n        // Muestra el tiempo restante grande y centrado\r\n        <div className=\"my-8\">\r\n          <p className=\"text-8xl font-extrabold text-red-700 leading-none\">\r\n            {turnTimeLeft}\r\n            <span className=\"text-4xl\">s</span>\r\n          </p>\r\n          <p className=\"text-2xl text-gray-600 mt-4\">Tiempo para tu movimiento</p>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"flex justify-center space-x-4 mt-8\">\r\n        <button\r\n          onClick={handleVale}\r\n          className=\"bg-green-600 hover:bg-green-700 text-white font-bold py-3 px-6 rounded-lg text-lg transition duration-300\"\r\n        >\r\n          ¡Vale!\r\n        </button>\r\n        <button\r\n          onClick={handleTerminar}\r\n          className=\"bg-red-500 hover:bg-red-600 text-white font-bold py-3 px-6 rounded-lg text-lg transition duration-300\"\r\n        >\r\n          Terminar Juego\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JengaGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}