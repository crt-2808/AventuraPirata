{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ramos\\\\Downloads\\\\project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom';\nimport PlayerCounter from './components/PlayerCounter';\nimport GameSelector from './components/GameSelector';\nimport GameRecommendation from './components/GameRecommendation';\nimport PirateHeader from './components/PirateHeader';\nimport './styles.css';\n\n// Componente Wrapper para manejar el estado y las rutas\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppWrapper() {\n  _s();\n  const [adultPlayers, setAdultPlayers] = useState(0);\n  const [childPlayers, setChildPlayers] = useState(0);\n  const [allowedDifficulties, setAllowedDifficulties] = useState([]);\n  const [selectedGameType, setSelectedGameType] = useState(null);\n  const navigate = useNavigate();\n\n  // useEffect para calcular las dificultades cuando cambian los jugadores\n  useEffect(() => {\n    let difficulties = [];\n    if (childPlayers > 0) {\n      difficulties = ['facil', 'medio'];\n    } else if (adultPlayers > 0) {\n      difficulties = ['medio', 'dificil'];\n    }\n    setAllowedDifficulties(difficulties);\n    console.log(\"Dificultades permitidas en App.js (calculadas):\", difficulties);\n  }, [adultPlayers, childPlayers]);\n\n  // Función que PlayerCounter llamará al hacer clic en \"Embarcar\"\n  const handleEmbark = (adults, children) => {\n    setAdultPlayers(adults);\n    setChildPlayers(children);\n    navigate('/gameSelector'); // Navegamos a la ruta de GameSelector\n  };\n\n  // Función para volver atrás desde GameSelector (a PlayerCounter)\n  const handleBackToPlayerCounter = () => {\n    navigate('/'); // Navegamos a la ruta raíz (PlayerCounter)\n  };\n\n  // Función para seleccionar el tipo de juego (llamada desde GameSelector)\n  const handleSelectGameType = gameType => {\n    setSelectedGameType(gameType);\n    navigate('/gameRecommendation'); // ¡Navegamos a la ruta de GameRecommendation!\n  };\n\n  // Función para volver desde GameRecommendation (a GameSelector)\n  const handleBackToGameSelector = () => {\n    setSelectedGameType(null); // Resetea el tipo de juego seleccionado\n    navigate('/gameSelector'); // Navegamos de vuelta a la ruta de GameSelector\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-blue-100 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(PirateHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md mx-auto mt-8\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(PlayerCounter, {\n            onEmbark: handleEmbark,\n            adultPlayers: adultPlayers,\n            childPlayers: childPlayers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/gameSelector\",\n          element: /*#__PURE__*/_jsxDEV(GameSelector, {\n            onSelectGameType: handleSelectGameType // Pasa la función para seleccionar y navegar\n            ,\n            onBack: handleBackToPlayerCounter // Pasa la función para la flecha de atrás\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/gameRecommendation\",\n          element: /*#__PURE__*/_jsxDEV(GameRecommendation, {\n            gameType: selectedGameType // Se pasa el tipo de juego seleccionado\n            ,\n            players: {\n              adultPlayers,\n              childPlayers\n            } // Se pasa el objeto de jugadores\n            ,\n            allowedDifficulties: allowedDifficulties // Se pasa el array de dificultades permitidas\n            ,\n            onBack: handleBackToGameSelector // Pasa la función para volver a GameSelector\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n// Envuelve AppWrapper con Router para que la navegación funcione\n_s(AppWrapper, \"3lPTFII8cH4/kuUi7UCz2faP9Vg=\", false, function () {\n  return [useNavigate];\n});\n_c = AppWrapper;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(AppWrapper, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppWrapper\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","useNavigate","PlayerCounter","GameSelector","GameRecommendation","PirateHeader","jsxDEV","_jsxDEV","AppWrapper","_s","adultPlayers","setAdultPlayers","childPlayers","setChildPlayers","allowedDifficulties","setAllowedDifficulties","selectedGameType","setSelectedGameType","navigate","difficulties","console","log","handleEmbark","adults","children","handleBackToPlayerCounter","handleSelectGameType","gameType","handleBackToGameSelector","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onEmbark","onSelectGameType","onBack","players","_c","App","_c2","$RefreshReg$"],"sources":["C:/Users/ramos/Downloads/project/src/App.js"],"sourcesContent":["// src/App.js\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom';\n\nimport PlayerCounter from './components/PlayerCounter';\nimport GameSelector from './components/GameSelector';\nimport GameRecommendation from './components/GameRecommendation';\nimport PirateHeader from './components/PirateHeader';\n\nimport './styles.css';\n\n// Componente Wrapper para manejar el estado y las rutas\nfunction AppWrapper() {\n  const [adultPlayers, setAdultPlayers] = useState(0);\n  const [childPlayers, setChildPlayers] = useState(0);\n  const [allowedDifficulties, setAllowedDifficulties] = useState([]);\n  const [selectedGameType, setSelectedGameType] = useState(null);\n\n  const navigate = useNavigate();\n\n  // useEffect para calcular las dificultades cuando cambian los jugadores\n  useEffect(() => {\n    let difficulties = [];\n    if (childPlayers > 0) {\n      difficulties = ['facil', 'medio'];\n    } else if (adultPlayers > 0) {\n      difficulties = ['medio', 'dificil'];\n    }\n    setAllowedDifficulties(difficulties);\n    console.log(\"Dificultades permitidas en App.js (calculadas):\", difficulties);\n  }, [adultPlayers, childPlayers]);\n\n  // Función que PlayerCounter llamará al hacer clic en \"Embarcar\"\n  const handleEmbark = (adults, children) => {\n    setAdultPlayers(adults);\n    setChildPlayers(children);\n    navigate('/gameSelector'); // Navegamos a la ruta de GameSelector\n  };\n\n  // Función para volver atrás desde GameSelector (a PlayerCounter)\n  const handleBackToPlayerCounter = () => {\n    navigate('/'); // Navegamos a la ruta raíz (PlayerCounter)\n  };\n\n  // Función para seleccionar el tipo de juego (llamada desde GameSelector)\n  const handleSelectGameType = (gameType) => {\n    setSelectedGameType(gameType);\n    navigate('/gameRecommendation'); // ¡Navegamos a la ruta de GameRecommendation!\n  };\n\n  // Función para volver desde GameRecommendation (a GameSelector)\n  const handleBackToGameSelector = () => {\n    setSelectedGameType(null); // Resetea el tipo de juego seleccionado\n    navigate('/gameSelector'); // Navegamos de vuelta a la ruta de GameSelector\n  };\n\n  return (\n    <div className=\"min-h-screen bg-blue-100 p-4\">\n      <PirateHeader />\n\n      <div className=\"max-w-md mx-auto mt-8\">\n        <Routes>\n          {/* Ruta para el contador de jugadores */}\n          <Route path=\"/\" element={\n            <PlayerCounter\n              onEmbark={handleEmbark}\n              adultPlayers={adultPlayers}\n              childPlayers={childPlayers}\n            />\n          } />\n\n          {/* Ruta para el selector de tipo de juego */}\n          <Route path=\"/gameSelector\" element={\n            <GameSelector\n              onSelectGameType={handleSelectGameType} // Pasa la función para seleccionar y navegar\n              onBack={handleBackToPlayerCounter}     // Pasa la función para la flecha de atrás\n            />\n          } />\n\n          {/* NUEVA RUTA para la recomendación del juego */}\n          <Route path=\"/gameRecommendation\" element={\n            <GameRecommendation\n              gameType={selectedGameType} // Se pasa el tipo de juego seleccionado\n              players={{ adultPlayers, childPlayers }} // Se pasa el objeto de jugadores\n              allowedDifficulties={allowedDifficulties} // Se pasa el array de dificultades permitidas\n              onBack={handleBackToGameSelector}        // Pasa la función para volver a GameSelector\n            />\n          } />\n        </Routes>\n      </div>\n    </div>\n  );\n}\n\n// Envuelve AppWrapper con Router para que la navegación funcione\nfunction App() {\n  return (\n    <Router>\n      <AppWrapper />\n    </Router>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}