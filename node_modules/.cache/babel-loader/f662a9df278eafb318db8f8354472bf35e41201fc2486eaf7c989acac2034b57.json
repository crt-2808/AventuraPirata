{"ast":null,"code":"var _jsxFileName = \"D:\\\\Proyectos Code\\\\project\\\\src\\\\components\\\\BastaGame.js\",\n  _s = $RefreshSig$();\n// src/components/BastaGame.js\n\nimport React, { useState, useEffect, useRef } from 'react';\n// Para la ruleta, necesitarás instalar una librería. Por ejemplo:\n// npm install react-roulette-wheel\n// import RouletteWheel from 'react-roulette-wheel'; // Si usas esta librería\n\n// Importar el sonido\nimport tenSecondsSound from '../assets/sounds/10seconds_sound.m4a'; // <--- Ajusta la ruta si es diferente\n\n// Array de letras para la ruleta\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWYZ'.split('');\nfunction BastaGame({\n  players,\n  playersWithIcons,\n  onExitGame,\n  allowedDifficulties\n}) {\n  _s();\n  const [gameState, setGameState] = useState('spinning'); // 'spinning', 'playing', 'bastaClicked', 'finished'\n  const [selectedLetter, setSelectedLetter] = useState('');\n  const [timer, setTimer] = useState(0); // Inicia en 0, se establecerá después de la letra\n  const [isSpinning, setIsSpinning] = useState(false);\n  const intervalRef = useRef(null); // Para el temporizador\n  const audioRef = useRef(new Audio(tenSecondsSound)); // Para el sonido\n\n  const rouletteRef = useRef(null); // Referencia para el elemento de la ruleta\n\n  // --- Lógica de la Ruleta y Animación ---\n  const spinRoulette = () => {\n    setIsSpinning(true);\n    // Animación de girar (CSS simple o librería)\n    if (rouletteRef.current) {\n      rouletteRef.current.style.transition = 'transform 3s ease-out';\n      rouletteRef.current.style.transform = `rotate(${Math.random() * 3600 + 720}deg)`; // Gira varias veces\n    }\n    setTimeout(() => {\n      setIsSpinning(false);\n      const randomIndex = Math.floor(Math.random() * LETTERS.length);\n      const letter = LETTERS[randomIndex];\n      setSelectedLetter(letter);\n      setGameState('playing'); // Cambia a estado de juego, lo que activará el timer de 1 min en el useEffect\n      if (rouletteRef.current) {\n        rouletteRef.current.style.transition = 'none'; // Resetear transición\n        const segmentAngle = 360 / LETTERS.length;\n        const targetRotation = 3600 - randomIndex * segmentAngle - segmentAngle / 2;\n        rouletteRef.current.style.transform = `rotate(${targetRotation % 360}deg)`;\n      }\n    }, 3000); // Duración de la animación de giro\n  };\n\n  // --- Lógica del Temporizador ---\n  const startTimer = duration => {\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current); // Limpiar cualquier timer existente\n    }\n    setTimer(duration); // Establecer la duración inicial del nuevo timer\n    intervalRef.current = setInterval(() => {\n      setTimer(prevTime => {\n        if (prevTime <= 1) {\n          clearInterval(intervalRef.current);\n          setGameState('finished');\n          setTimeout(() => {\n            onExitGame(); // Navegará a gameSelector por ahora\n            console.log(\"Tiempo terminado. Ir a resultados (aún no implementado).\");\n          }, 1000);\n          return 0;\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n  };\n\n  // --- Efecto para iniciar el giro y los timers ---\n  useEffect(() => {\n    if (gameState === 'spinning') {\n      spinRoulette();\n    } else if (gameState === 'playing' && selectedLetter) {\n      // El timer de 1 minuto inicia automáticamente después de que la letra es seleccionada\n      // y el estado cambia a 'playing'\n      startTimer(60);\n    }\n\n    // Limpieza al desmontar el componente\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n      if (audioRef.current) {\n        audioRef.current.pause();\n        audioRef.current.currentTime = 0;\n      }\n    };\n  }, [gameState, selectedLetter]); // Dependencias: se ejecuta cuando gameState o selectedLetter cambian\n\n  // --- Manejar el botón ¡Basta! ---\n  const handleBastaClick = () => {\n    if (gameState === 'playing') {\n      // \"Borra\" el contador de 1 minuto (reiniciándolo con 10s)\n      setGameState('bastaClicked'); // Cambia el estado para reflejar que se hizo clic en Basta\n      startTimer(10); // Inicia el timer de 10 segundos\n      audioRef.current.play().catch(e => console.error(\"Error al reproducir el sonido:\", e));\n    }\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n\n  // --- Renderizado del componente ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container bg-white p-6 rounded-lg shadow-md text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onExitGame,\n      className: \"absolute top-4 left-4 bg-gray-200 hover:bg-gray-300 p-2 rounded-full text-xl\",\n      children: \"\\u2190 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-6 text-gray-800\",\n      children: \"\\xA1A jugar Basta!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), gameState === 'spinning' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl text-gray-600 mb-4\",\n        children: \"Girando la ruleta...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roulette-wheel-container relative w-48 h-48 mx-auto border-4 border-yellow-500 rounded-full flex items-center justify-center overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute top-0 left-1/2 -ml-2 w-0 h-0 border-l-[10px] border-l-transparent border-r-[10px] border-r-transparent border-b-[20px] border-b-red-500 z-10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: rouletteRef,\n          className: \"roulette-content w-full h-full rounded-full flex items-center justify-center\",\n          style: {\n            background: `conic-gradient(\n                                    ${LETTERS.map((_, i) => `${i % 2 === 0 ? '#fdd835' : '#ffc107'} ${i * (360 / LETTERS.length)}deg ${(i + 1) * (360 / LETTERS.length)}deg`).join(', ')}\n                                 )`\n          },\n          children: LETTERS.map((letter, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute text-xl font-bold text-gray-800\",\n            style: {\n              transform: `rotate(${index * (360 / LETTERS.length)}deg) translate(0, -90px) rotate(-${index * (360 / LETTERS.length)}deg)`,\n              transformOrigin: 'center center'\n            },\n            children: letter\n          }, letter, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this), isSpinning && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute inset-0 bg-black bg-opacity-30 rounded-full flex items-center justify-center text-white text-3xl font-bold\",\n          children: \"GIRANDO...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }, this), (gameState === 'playing' || gameState === 'bastaClicked') && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl text-gray-600 mb-2\",\n        children: \"Letra seleccionada:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-6xl font-extrabold text-blue-700 mb-6 animate-pulse\",\n        children: selectedLetter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-gray-600 mb-2\",\n        children: \"Tiempo restante:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `text-5xl font-extrabold mb-8 ${timer <= 10 ? 'text-red-500 animate-bounce' : 'text-green-600'}`,\n        children: formatTime(timer)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBastaClick,\n        className: \"bg-red-600 hover:bg-red-700 text-white font-bold py-3 px-8 rounded-lg text-2xl transition duration-300 disabled:opacity-50 disabled:cursor-not-allowed\",\n        disabled: gameState === 'bastaClicked' // Deshabilitar si ya se hizo clic en Basta\n        ,\n        children: \"\\xA1Basta!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }, this), gameState === 'finished' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-2xl font-bold text-gray-800\",\n      children: \"\\xA1Tiempo terminado! \\xA1A revisar las respuestas!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n}\n_s(BastaGame, \"hzk7iFEBAkzDfLSsVM+p0HMpnnw=\");\n_c = BastaGame;\nexport default BastaGame;\nvar _c;\n$RefreshReg$(_c, \"BastaGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","tenSecondsSound","jsxDEV","_jsxDEV","LETTERS","split","BastaGame","players","playersWithIcons","onExitGame","allowedDifficulties","_s","gameState","setGameState","selectedLetter","setSelectedLetter","timer","setTimer","isSpinning","setIsSpinning","intervalRef","audioRef","Audio","rouletteRef","spinRoulette","current","style","transition","transform","Math","random","setTimeout","randomIndex","floor","length","letter","segmentAngle","targetRotation","startTimer","duration","clearInterval","setInterval","prevTime","console","log","pause","currentTime","handleBastaClick","play","catch","e","error","formatTime","seconds","minutes","remainingSeconds","toString","padStart","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","background","map","_","i","join","index","transformOrigin","disabled","_c","$RefreshReg$"],"sources":["D:/Proyectos Code/project/src/components/BastaGame.js"],"sourcesContent":["// src/components/BastaGame.js\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\n// Para la ruleta, necesitarás instalar una librería. Por ejemplo:\r\n// npm install react-roulette-wheel\r\n// import RouletteWheel from 'react-roulette-wheel'; // Si usas esta librería\r\n\r\n// Importar el sonido\r\nimport tenSecondsSound from '../assets/sounds/10seconds_sound.m4a'; // <--- Ajusta la ruta si es diferente\r\n\r\n// Array de letras para la ruleta\r\nconst LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWYZ'.split('');\r\n\r\nfunction BastaGame({ players, playersWithIcons, onExitGame, allowedDifficulties }) {\r\n    const [gameState, setGameState] = useState('spinning'); // 'spinning', 'playing', 'bastaClicked', 'finished'\r\n    const [selectedLetter, setSelectedLetter] = useState('');\r\n    const [timer, setTimer] = useState(0); // Inicia en 0, se establecerá después de la letra\r\n    const [isSpinning, setIsSpinning] = useState(false);\r\n    const intervalRef = useRef(null); // Para el temporizador\r\n    const audioRef = useRef(new Audio(tenSecondsSound)); // Para el sonido\r\n\r\n    const rouletteRef = useRef(null); // Referencia para el elemento de la ruleta\r\n\r\n    // --- Lógica de la Ruleta y Animación ---\r\n    const spinRoulette = () => {\r\n        setIsSpinning(true);\r\n        // Animación de girar (CSS simple o librería)\r\n        if (rouletteRef.current) {\r\n            rouletteRef.current.style.transition = 'transform 3s ease-out';\r\n            rouletteRef.current.style.transform = `rotate(${Math.random() * 3600 + 720}deg)`; // Gira varias veces\r\n        }\r\n\r\n        setTimeout(() => {\r\n            setIsSpinning(false);\r\n            const randomIndex = Math.floor(Math.random() * LETTERS.length);\r\n            const letter = LETTERS[randomIndex];\r\n            setSelectedLetter(letter);\r\n            setGameState('playing'); // Cambia a estado de juego, lo que activará el timer de 1 min en el useEffect\r\n            if (rouletteRef.current) {\r\n                rouletteRef.current.style.transition = 'none'; // Resetear transición\r\n                const segmentAngle = 360 / LETTERS.length;\r\n                const targetRotation = 3600 - (randomIndex * segmentAngle) - (segmentAngle / 2);\r\n                rouletteRef.current.style.transform = `rotate(${targetRotation % 360}deg)`;\r\n            }\r\n        }, 3000); // Duración de la animación de giro\r\n    };\r\n\r\n    // --- Lógica del Temporizador ---\r\n    const startTimer = (duration) => {\r\n        if (intervalRef.current) {\r\n            clearInterval(intervalRef.current); // Limpiar cualquier timer existente\r\n        }\r\n        setTimer(duration); // Establecer la duración inicial del nuevo timer\r\n        intervalRef.current = setInterval(() => {\r\n            setTimer(prevTime => {\r\n                if (prevTime <= 1) {\r\n                    clearInterval(intervalRef.current);\r\n                    setGameState('finished');\r\n                    setTimeout(() => {\r\n                        onExitGame(); // Navegará a gameSelector por ahora\r\n                        console.log(\"Tiempo terminado. Ir a resultados (aún no implementado).\");\r\n                    }, 1000);\r\n                    return 0;\r\n                }\r\n                return prevTime - 1;\r\n            });\r\n        }, 1000);\r\n    };\r\n\r\n    // --- Efecto para iniciar el giro y los timers ---\r\n    useEffect(() => {\r\n        if (gameState === 'spinning') {\r\n            spinRoulette();\r\n        } else if (gameState === 'playing' && selectedLetter) {\r\n            // El timer de 1 minuto inicia automáticamente después de que la letra es seleccionada\r\n            // y el estado cambia a 'playing'\r\n            startTimer(60);\r\n        }\r\n\r\n        // Limpieza al desmontar el componente\r\n        return () => {\r\n            if (intervalRef.current) {\r\n                clearInterval(intervalRef.current);\r\n            }\r\n            if (audioRef.current) {\r\n                audioRef.current.pause();\r\n                audioRef.current.currentTime = 0;\r\n            }\r\n        };\r\n    }, [gameState, selectedLetter]); // Dependencias: se ejecuta cuando gameState o selectedLetter cambian\r\n\r\n    // --- Manejar el botón ¡Basta! ---\r\n    const handleBastaClick = () => {\r\n        if (gameState === 'playing') {\r\n            // \"Borra\" el contador de 1 minuto (reiniciándolo con 10s)\r\n            setGameState('bastaClicked'); // Cambia el estado para reflejar que se hizo clic en Basta\r\n            startTimer(10); // Inicia el timer de 10 segundos\r\n            audioRef.current.play().catch(e => console.error(\"Error al reproducir el sonido:\", e));\r\n        }\r\n    };\r\n\r\n    const formatTime = (seconds) => {\r\n        const minutes = Math.floor(seconds / 60);\r\n        const remainingSeconds = seconds % 60;\r\n        return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n    };\r\n\r\n    // --- Renderizado del componente ---\r\n    return (\r\n        <div className=\"game-container bg-white p-6 rounded-lg shadow-md text-center\">\r\n            <button\r\n                onClick={onExitGame}\r\n                className=\"absolute top-4 left-4 bg-gray-200 hover:bg-gray-300 p-2 rounded-full text-xl\"\r\n            >\r\n                &#8592; {/* Flecha de regreso */}\r\n            </button>\r\n\r\n            <h2 className=\"text-3xl font-bold mb-6 text-gray-800\">¡A jugar Basta!</h2>\r\n\r\n            {gameState === 'spinning' && (\r\n                <div className=\"mb-8\">\r\n                    <p className=\"text-xl text-gray-600 mb-4\">Girando la ruleta...</p>\r\n                    <div className=\"roulette-wheel-container relative w-48 h-48 mx-auto border-4 border-yellow-500 rounded-full flex items-center justify-center overflow-hidden\">\r\n                        {/* Indicador de la letra */}\r\n                        <div className=\"absolute top-0 left-1/2 -ml-2 w-0 h-0 border-l-[10px] border-l-transparent border-r-[10px] border-r-transparent border-b-[20px] border-b-red-500 z-10\"></div>\r\n\r\n                        {/* Ruleta: Con una librería esto sería reemplazado por el componente de la librería */}\r\n                        <div ref={rouletteRef} className=\"roulette-content w-full h-full rounded-full flex items-center justify-center\"\r\n                             style={{\r\n                                 background: `conic-gradient(\r\n                                    ${LETTERS.map((_, i) => `${i % 2 === 0 ? '#fdd835' : '#ffc107'} ${i * (360 / LETTERS.length)}deg ${(i + 1) * (360 / LETTERS.length)}deg`).join(', ')}\r\n                                 )`\r\n                             }}>\r\n                            {/* Letras dentro de la ruleta (posición aproximada) */}\r\n                            {LETTERS.map((letter, index) => (\r\n                                <div key={letter} className=\"absolute text-xl font-bold text-gray-800\"\r\n                                     style={{\r\n                                         transform: `rotate(${index * (360 / LETTERS.length)}deg) translate(0, -90px) rotate(-${index * (360 / LETTERS.length)}deg)`,\r\n                                         transformOrigin: 'center center'\r\n                                     }}>\r\n                                    {letter}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        {isSpinning && <div className=\"absolute inset-0 bg-black bg-opacity-30 rounded-full flex items-center justify-center text-white text-3xl font-bold\">GIRANDO...</div>}\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {(gameState === 'playing' || gameState === 'bastaClicked') && (\r\n                <div className=\"mb-8\">\r\n                    <p className=\"text-xl text-gray-600 mb-2\">Letra seleccionada:</p>\r\n                    <p className=\"text-6xl font-extrabold text-blue-700 mb-6 animate-pulse\">{selectedLetter}</p>\r\n\r\n                    <p className=\"text-lg text-gray-600 mb-2\">Tiempo restante:</p>\r\n                    <p className={`text-5xl font-extrabold mb-8 ${timer <= 10 ? 'text-red-500 animate-bounce' : 'text-green-600'}`}>\r\n                        {formatTime(timer)}\r\n                    </p>\r\n\r\n                    <button\r\n                        onClick={handleBastaClick}\r\n                        className=\"bg-red-600 hover:bg-red-700 text-white font-bold py-3 px-8 rounded-lg text-2xl transition duration-300 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                        disabled={gameState === 'bastaClicked'} // Deshabilitar si ya se hizo clic en Basta\r\n                    >\r\n                        ¡Basta!\r\n                    </button>\r\n                </div>\r\n            )}\r\n\r\n            {gameState === 'finished' && (\r\n                <div className=\"text-2xl font-bold text-gray-800\">\r\n                    ¡Tiempo terminado! ¡A revisar las respuestas!\r\n                    {/* Aquí eventualmente se redirigirá a la pantalla de resultados */}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BastaGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}