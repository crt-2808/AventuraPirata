{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ramos\\\\Downloads\\\\project\\\\src\\\\components\\\\PictionaryGame.js\",\n  _s = $RefreshSig$();\n// src/components/PictionaryGame.js\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PictionaryGame({\n  players,\n  allowedDifficulties,\n  onExitGame\n}) {\n  _s();\n  const [gameData, setGameData] = useState([]);\n  const [currentElementIndex, setCurrentElementIndex] = useState(0);\n  const [currentPistaIndex, setCurrentPistaIndex] = useState(0);\n  const [showHintPopup, setShowHintPopup] = useState(false);\n  const [showChangePlayerMessage, setShowChangePlayerMessage] = useState(false);\n  const [changePlayerTimer, setChangePlayerTimer] = useState(0);\n  const [hintTimer, setHintTimer] = useState(0);\n  const [isGameActive, setIsGameActive] = useState(false);\n  const changePlayerTimerRef = useRef(null);\n  const hintTimerRef = useRef(null);\n\n  // Carga y mezcla los datos del juego al inicio\n  useEffect(() => {\n    const pictionaryData = require('../mock/pictionary_data.json');\n    const filteredData = pictionaryData.filter(item => item.Dificultad && allowedDifficulties.includes(item.Dificultad));\n    const mappedData = filteredData.map(item => ({\n      elemento: item.Elemento,\n      pistas: item.Pistas_Pictionary,\n      dificultad: item.Dificultad\n    }));\n    const selectedElements = [];\n    if (mappedData.length > 0) {\n      const shuffledData = [...mappedData].sort(() => 0.5 - Math.random());\n      // Selecciona 5 elementos como máximo, o menos si no hay suficientes\n      for (let i = 0; i < 5 && i < shuffledData.length; i++) {\n        selectedElements.push(shuffledData[i]);\n      }\n    }\n    setGameData(selectedElements);\n    console.log(\"Datos de Pictionary filtrados por dificultad:\", selectedElements);\n    if (selectedElements.length > 0) {\n      setCurrentElementIndex(0);\n      setCurrentPistaIndex(0);\n      setIsGameActive(true);\n      setShowHintPopup(false);\n      setShowChangePlayerMessage(false);\n      setChangePlayerTimer(0);\n      setHintTimer(0);\n    } else {\n      setIsGameActive(false);\n      console.log(\"No hay elementos de Pictionary para la dificultad seleccionada.\");\n    }\n\n    // Limpieza de temporizadores al desmontar el componente\n    return () => {\n      clearInterval(changePlayerTimerRef.current);\n      clearInterval(hintTimerRef.current);\n    };\n  }, [allowedDifficulties]); // Se ejecuta cuando allowedDifficulties cambia\n\n  // --- Lógica del Pop-up de Pistas ---\n  useEffect(() => {\n    if (showHintPopup && hintTimer > 0) {\n      hintTimerRef.current = setInterval(() => {\n        setHintTimer(prevTime => prevTime - 1);\n      }, 1000);\n    } else if (hintTimer === 0 && showHintPopup) {\n      clearInterval(hintTimerRef.current);\n      setShowHintPopup(false); // Cierra el pop-up cuando el tiempo se agota\n    }\n    return () => clearInterval(hintTimerRef.current);\n  }, [showHintPopup, hintTimer]);\n\n  // --- Lógica del Temporizador de Cambio de Jugador ---\n  useEffect(() => {\n    if (showChangePlayerMessage && changePlayerTimer > 0) {\n      changePlayerTimerRef.current = setInterval(() => {\n        setChangePlayerTimer(prevTime => prevTime - 1);\n      }, 1000);\n    } else if (changePlayerTimer === 0 && showChangePlayerMessage) {\n      clearInterval(changePlayerTimerRef.current);\n      setShowChangePlayerMessage(false); // Oculta el mensaje\n      handleNextElement(); // Pasa al siguiente elemento después del temporizador\n    }\n    return () => clearInterval(changePlayerTimerRef.current);\n  }, [showChangePlayerMessage, changePlayerTimer]);\n  const handleShowHint = () => {\n    if (gameData[currentElementIndex] && gameData[currentElementIndex].pistas) {\n      const currentObjectPistas = gameData[currentElementIndex].pistas;\n\n      // Asegura que currentPistaIndex no exceda el tamaño del array\n      // Si ya está en la última pista, vuelve a la primera\n      if (currentPistaIndex >= currentObjectPistas.length) {\n        setCurrentPistaIndex(0);\n      }\n      setShowHintPopup(true);\n      setHintTimer(3); // 3 segundos para el pop-up\n\n      // Incrementar para la próxima vez que se solicite una pista,\n      // pero solo si no es la última pista del arreglo.\n      // Si es la última, el siguiente clic la reiniciará a 0 por la lógica de arriba.\n      if (currentPistaIndex < currentObjectPistas.length - 1) {\n        setCurrentPistaIndex(prevIndex => prevIndex + 1);\n      } else {\n        // Si ya estamos en la última, el próximo click la reiniciará al índice 0\n        // No hacemos nada aquí, ya se manejó arriba.\n      }\n    }\n  };\n  const handleAdivine = () => {\n    setIsGameActive(false); // Pausa el juego principal\n    setShowChangePlayerMessage(true);\n    setChangePlayerTimer(7); // 7 segundos para el mensaje de cambio de jugador\n    // No necesitamos pasar al siguiente elemento aquí, lo hará el useEffect del temporizador\n  };\n  const handleNextElement = () => {\n    if (currentElementIndex < gameData.length - 1) {\n      setCurrentElementIndex(prevIndex => prevIndex + 1);\n      setCurrentPistaIndex(0); // Reinicia el índice de pista para el nuevo elemento\n      setIsGameActive(true); // Reactiva el juego\n    } else {\n      console.log(\"¡Juego de Pictionary Terminado!\");\n      setIsGameActive(false);\n      // Aquí podrías añadir un mensaje final antes de salir, similar a VeoVeo\n      // Por simplicidad, por ahora simplemente salimos\n      if (onExitGame) {\n        onExitGame();\n      }\n    }\n  };\n  if (gameData.length === 0 && !isGameActive) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md mx-auto mt-8 bg-white p-6 rounded-lg shadow-md text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4 text-gray-800\",\n        children: \"Cargando juego Pictionary...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"Aseg\\xFArate de que hay datos de Pictionary para las dificultades seleccionadas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onExitGame,\n        className: \"mt-4 bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded\",\n        children: \"Salir del Juego\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Si el juego ha terminado y no hay más elementos para mostrar\n  if (!gameData[currentElementIndex] && !isGameActive && !showChangePlayerMessage) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md mx-auto mt-8 bg-white p-6 rounded-lg shadow-md text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4 text-gray-800\",\n        children: \"Juego de Pictionary Terminado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"Gracias por jugar. \\xA1Vuelve pronto!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onExitGame,\n        className: \"mt-4 bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded\",\n        children: \"Volver al Selector de Juego\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this);\n  }\n  const currentElement = gameData[currentElementIndex];\n  const currentPista = currentElement === null || currentElement === void 0 ? void 0 : currentElement.pistas[currentPistaIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container bg-white p-6 rounded-lg shadow-md text-center relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onExitGame,\n      className: \"absolute top-4 left-4 bg-gray-200 hover:bg-gray-300 p-2 rounded-full text-xl\",\n      children: \"\\u2190\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4 text-gray-800\",\n      children: \"\\xA1Pictionary!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg text-gray-700 mb-6\",\n      children: [\"Elemento \", currentElementIndex + 1, \" de \", gameData.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), showChangePlayerMessage ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-600 text-5xl font-bold mb-4\",\n        children: \"\\xA1Cambia de Jugador!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-700 text-3xl\",\n        children: [\"Siguiente elemento en \", changePlayerTimer, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // --- Muestra el Elemento principal del juego ---\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-5xl font-extrabold text-purple-700 my-8\",\n        children: [\"\\\"\", currentElement === null || currentElement === void 0 ? void 0 : currentElement.elemento, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center space-x-4 mt-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAdivine,\n          className: \"bg-green-600 hover:bg-green-700 text-white font-bold py-3 px-6 rounded-lg text-lg transition duration-300\",\n          children: \"\\xA1Adivin\\xE9!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleShowHint,\n          className: \"bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-6 rounded-lg text-lg transition duration-300\",\n          children: \"Pista\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), showHintPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-8 rounded-lg shadow-xl text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-3xl font-bold text-gray-800 mb-4\",\n          children: \"Pista:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-blue-600 text-4xl font-extrabold mb-6\",\n          children: [\"\\\"\", currentPista, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500 text-lg\",\n          children: [\"Cerrando en \", hintTimer, \"s...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n}\n_s(PictionaryGame, \"OTY+PmBDYR7rZf5vjrKHnkdjer8=\");\n_c = PictionaryGame;\nexport default PictionaryGame;\nvar _c;\n$RefreshReg$(_c, \"PictionaryGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","PictionaryGame","players","allowedDifficulties","onExitGame","_s","gameData","setGameData","currentElementIndex","setCurrentElementIndex","currentPistaIndex","setCurrentPistaIndex","showHintPopup","setShowHintPopup","showChangePlayerMessage","setShowChangePlayerMessage","changePlayerTimer","setChangePlayerTimer","hintTimer","setHintTimer","isGameActive","setIsGameActive","changePlayerTimerRef","hintTimerRef","pictionaryData","require","filteredData","filter","item","Dificultad","includes","mappedData","map","elemento","Elemento","pistas","Pistas_Pictionary","dificultad","selectedElements","length","shuffledData","sort","Math","random","i","push","console","log","clearInterval","current","setInterval","prevTime","handleNextElement","handleShowHint","currentObjectPistas","prevIndex","handleAdivine","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","currentElement","currentPista","_c","$RefreshReg$"],"sources":["C:/Users/ramos/Downloads/project/src/components/PictionaryGame.js"],"sourcesContent":["// src/components/PictionaryGame.js\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\n\r\nfunction PictionaryGame({ players, allowedDifficulties, onExitGame }) {\r\n  const [gameData, setGameData] = useState([]);\r\n  const [currentElementIndex, setCurrentElementIndex] = useState(0);\r\n  const [currentPistaIndex, setCurrentPistaIndex] = useState(0);\r\n  const [showHintPopup, setShowHintPopup] = useState(false);\r\n  const [showChangePlayerMessage, setShowChangePlayerMessage] = useState(false);\r\n  const [changePlayerTimer, setChangePlayerTimer] = useState(0);\r\n  const [hintTimer, setHintTimer] = useState(0);\r\n  const [isGameActive, setIsGameActive] = useState(false);\r\n\r\n  const changePlayerTimerRef = useRef(null);\r\n  const hintTimerRef = useRef(null);\r\n\r\n  // Carga y mezcla los datos del juego al inicio\r\n  useEffect(() => {\r\n    const pictionaryData = require('../mock/pictionary_data.json');\r\n\r\n    const filteredData = pictionaryData.filter(item =>\r\n      item.Dificultad && allowedDifficulties.includes(item.Dificultad)\r\n    );\r\n\r\n    const mappedData = filteredData.map(item => ({\r\n      elemento: item.Elemento,\r\n      pistas: item.Pistas_Pictionary,\r\n      dificultad: item.Dificultad\r\n    }));\r\n\r\n    const selectedElements = [];\r\n    if (mappedData.length > 0) {\r\n      const shuffledData = [...mappedData].sort(() => 0.5 - Math.random());\r\n      // Selecciona 5 elementos como máximo, o menos si no hay suficientes\r\n      for (let i = 0; i < 5 && i < shuffledData.length; i++) {\r\n        selectedElements.push(shuffledData[i]);\r\n      }\r\n    }\r\n    setGameData(selectedElements);\r\n\r\n    console.log(\"Datos de Pictionary filtrados por dificultad:\", selectedElements);\r\n    if (selectedElements.length > 0) {\r\n      setCurrentElementIndex(0);\r\n      setCurrentPistaIndex(0);\r\n      setIsGameActive(true);\r\n      setShowHintPopup(false);\r\n      setShowChangePlayerMessage(false);\r\n      setChangePlayerTimer(0);\r\n      setHintTimer(0);\r\n    } else {\r\n      setIsGameActive(false);\r\n      console.log(\"No hay elementos de Pictionary para la dificultad seleccionada.\");\r\n    }\r\n\r\n    // Limpieza de temporizadores al desmontar el componente\r\n    return () => {\r\n      clearInterval(changePlayerTimerRef.current);\r\n      clearInterval(hintTimerRef.current);\r\n    };\r\n  }, [allowedDifficulties]); // Se ejecuta cuando allowedDifficulties cambia\r\n\r\n  // --- Lógica del Pop-up de Pistas ---\r\n  useEffect(() => {\r\n    if (showHintPopup && hintTimer > 0) {\r\n      hintTimerRef.current = setInterval(() => {\r\n        setHintTimer(prevTime => prevTime - 1);\r\n      }, 1000);\r\n    } else if (hintTimer === 0 && showHintPopup) {\r\n      clearInterval(hintTimerRef.current);\r\n      setShowHintPopup(false); // Cierra el pop-up cuando el tiempo se agota\r\n    }\r\n    return () => clearInterval(hintTimerRef.current);\r\n  }, [showHintPopup, hintTimer]);\r\n\r\n  // --- Lógica del Temporizador de Cambio de Jugador ---\r\n  useEffect(() => {\r\n    if (showChangePlayerMessage && changePlayerTimer > 0) {\r\n      changePlayerTimerRef.current = setInterval(() => {\r\n        setChangePlayerTimer(prevTime => prevTime - 1);\r\n      }, 1000);\r\n    } else if (changePlayerTimer === 0 && showChangePlayerMessage) {\r\n      clearInterval(changePlayerTimerRef.current);\r\n      setShowChangePlayerMessage(false); // Oculta el mensaje\r\n      handleNextElement(); // Pasa al siguiente elemento después del temporizador\r\n    }\r\n    return () => clearInterval(changePlayerTimerRef.current);\r\n  }, [showChangePlayerMessage, changePlayerTimer]);\r\n\r\n\r\n  const handleShowHint = () => {\r\n    if (gameData[currentElementIndex] && gameData[currentElementIndex].pistas) {\r\n      const currentObjectPistas = gameData[currentElementIndex].pistas;\r\n      \r\n      // Asegura que currentPistaIndex no exceda el tamaño del array\r\n      // Si ya está en la última pista, vuelve a la primera\r\n      if (currentPistaIndex >= currentObjectPistas.length) {\r\n          setCurrentPistaIndex(0);\r\n      }\r\n\r\n      setShowHintPopup(true);\r\n      setHintTimer(3); // 3 segundos para el pop-up\r\n\r\n      // Incrementar para la próxima vez que se solicite una pista,\r\n      // pero solo si no es la última pista del arreglo.\r\n      // Si es la última, el siguiente clic la reiniciará a 0 por la lógica de arriba.\r\n      if (currentPistaIndex < currentObjectPistas.length - 1) {\r\n          setCurrentPistaIndex(prevIndex => prevIndex + 1);\r\n      } else {\r\n          // Si ya estamos en la última, el próximo click la reiniciará al índice 0\r\n          // No hacemos nada aquí, ya se manejó arriba.\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAdivine = () => {\r\n    setIsGameActive(false); // Pausa el juego principal\r\n    setShowChangePlayerMessage(true);\r\n    setChangePlayerTimer(7); // 7 segundos para el mensaje de cambio de jugador\r\n    // No necesitamos pasar al siguiente elemento aquí, lo hará el useEffect del temporizador\r\n  };\r\n\r\n  const handleNextElement = () => {\r\n    if (currentElementIndex < gameData.length - 1) {\r\n      setCurrentElementIndex(prevIndex => prevIndex + 1);\r\n      setCurrentPistaIndex(0); // Reinicia el índice de pista para el nuevo elemento\r\n      setIsGameActive(true); // Reactiva el juego\r\n    } else {\r\n      console.log(\"¡Juego de Pictionary Terminado!\");\r\n      setIsGameActive(false);\r\n      // Aquí podrías añadir un mensaje final antes de salir, similar a VeoVeo\r\n      // Por simplicidad, por ahora simplemente salimos\r\n      if (onExitGame) {\r\n        onExitGame();\r\n      }\r\n    }\r\n  };\r\n\r\n  if (gameData.length === 0 && !isGameActive) {\r\n    return (\r\n      <div className=\"max-w-md mx-auto mt-8 bg-white p-6 rounded-lg shadow-md text-center\">\r\n        <h2 className=\"text-2xl font-bold mb-4 text-gray-800\">Cargando juego Pictionary...</h2>\r\n        <p className=\"text-gray-600\">Asegúrate de que hay datos de Pictionary para las dificultades seleccionadas.</p>\r\n        <button onClick={onExitGame} className=\"mt-4 bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded\">\r\n          Salir del Juego\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Si el juego ha terminado y no hay más elementos para mostrar\r\n  if (!gameData[currentElementIndex] && !isGameActive && !showChangePlayerMessage) {\r\n    return (\r\n      <div className=\"max-w-md mx-auto mt-8 bg-white p-6 rounded-lg shadow-md text-center\">\r\n        <h2 className=\"text-2xl font-bold mb-4 text-gray-800\">Juego de Pictionary Terminado</h2>\r\n        <p className=\"text-gray-600\">Gracias por jugar. ¡Vuelve pronto!</p>\r\n        <button onClick={onExitGame} className=\"mt-4 bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded\">\r\n          Volver al Selector de Juego\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const currentElement = gameData[currentElementIndex];\r\n  const currentPista = currentElement?.pistas[currentPistaIndex];\r\n\r\n  return (\r\n    <div className=\"game-container bg-white p-6 rounded-lg shadow-md text-center relative\">\r\n      <button\r\n        onClick={onExitGame}\r\n        className=\"absolute top-4 left-4 bg-gray-200 hover:bg-gray-300 p-2 rounded-full text-xl\"\r\n      >\r\n        &#8592;\r\n      </button>\r\n\r\n      <h2 className=\"text-2xl font-bold mb-4 text-gray-800\">¡Pictionary!</h2>\r\n\r\n      <p className=\"text-lg text-gray-700 mb-6\">Elemento {currentElementIndex + 1} de {gameData.length}</p>\r\n\r\n      {/* --- Mensaje de Cambio de Jugador (se muestra cuando showChangePlayerMessage es true) --- */}\r\n      {showChangePlayerMessage ? (\r\n        <div className=\"my-10\">\r\n          <p className=\"text-green-600 text-5xl font-bold mb-4\">¡Cambia de Jugador!</p>\r\n          <p className=\"text-gray-700 text-3xl\">Siguiente elemento en {changePlayerTimer}s</p>\r\n        </div>\r\n      ) : (\r\n        // --- Muestra el Elemento principal del juego ---\r\n        <>\r\n          <div className=\"text-5xl font-extrabold text-purple-700 my-8\">\r\n            \"{currentElement?.elemento}\"\r\n          </div>\r\n\r\n          <div className=\"flex justify-center space-x-4 mt-8\">\r\n            <button\r\n              onClick={handleAdivine}\r\n              className=\"bg-green-600 hover:bg-green-700 text-white font-bold py-3 px-6 rounded-lg text-lg transition duration-300\"\r\n            >\r\n              ¡Adiviné!\r\n            </button>\r\n            <button\r\n              onClick={handleShowHint}\r\n              className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-6 rounded-lg text-lg transition duration-300\"\r\n            >\r\n              Pista\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* --- Pop-up de Pistas (se muestra cuando showHintPopup es true) --- */}\r\n      {showHintPopup && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white p-8 rounded-lg shadow-xl text-center\">\r\n            <h3 className=\"text-3xl font-bold text-gray-800 mb-4\">Pista:</h3>\r\n            <p className=\"text-blue-600 text-4xl font-extrabold mb-6\">\"{currentPista}\"</p>\r\n            <p className=\"text-gray-500 text-lg\">Cerrando en {hintTimer}s...</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PictionaryGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}